# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# Project package.
# 
# Translators:
# Jules GARNIER, 2018
# MarieSilvestre, 2013-2014,2016,2020
# Médéric RIBREUX <mederic.ribreux__translate@medspx.fr>, 2015
# Sant-anna <delazj@gmail.com>, 2014-2015,2019
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-11 14:48+0200\n"
"PO-Revision-Date: 2020-03-06 15:14+0000\n"
"Last-Translator: MarieSilvestre\n"
"Language-Team: French (http://www.transifex.com/qgis/qgis-documentation/language/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../source/docs/user_manual/processing/console.rst:10
msgid "Using processing algorithms from the console"
msgstr "Utiliser les algorithmes du module de traitements depuis la console Python"

#: ../../source/docs/user_manual/processing/console.rst:17
msgid ""
"The console allows advanced users to increase their productivity and perform"
" complex operations that cannot be performed using any of the other GUI "
"elements of the processing framework. Models involving several algorithms "
"can be defined using the command-line interface, and additional operations "
"such as loops and conditional sentences can be added to create more flexible"
" and powerful workflows."
msgstr "La console permet aux utilisateurs confirmés d'accroître leur productivité en réalisant des opérations complexes qui ne pourraient par être réalisées à partir de l'interface graphique du module de Traitements. Les modèles impliquant plusieurs algorithmes peuvent être définis à partir de l'interface en lignes de commandes et des opérations additionnelles comme les boucles ou les branchements conditionnels permettent de créer des flux de traitements plus puissants et plus flexibles."

#: ../../source/docs/user_manual/processing/console.rst:24
msgid ""
"There is not a processing console in QGIS, but all processing commands are "
"available instead from the QGIS built-in :ref:`Python console <console>`.  "
"That means that you can incorporate those commands into your console work "
"and connect processing algorithms to all the other features (including "
"methods from the QGIS API) available from there."
msgstr "Il n'y a pas de console spécifique au module de traitements de QGIS mais toutes les commandes du module sont disponibles via la :ref:`console Python <console>` de QGIS. Cela signifie que vous pouvez intégrer ces commandes dans votre travail et les connecter aux autres fonctions accessibles depuis la console (dont les méthodes issues de l'API QGIS)."

#: ../../source/docs/user_manual/processing/console.rst:30
msgid ""
"The code that you can execute from the Python console, even if it does not "
"call any specific processing method, can be converted into a new algorithm "
"that you can later call from the toolbox, the graphical modeler or any other"
" component, just like you do with any other algorithm. In fact, some "
"algorithms that you can find in the toolbox are simple scripts."
msgstr "Le code exécuté à partir de la console Python, même s'il n'utilise pas de méthodes de traitements particulières, peut être converti en un nouveau algorithme pour être réutilisé dans la boîte à outils, le modeleur ou dans un autre flux de traitements, comme tout autre algorithme. Ainsi certains algorithmes que vous pouvez trouver dans la boîte à outils sont en fait de simples scripts."

#: ../../source/docs/user_manual/processing/console.rst:37
msgid ""
"In this section, we will see how to use processing algorithms from the QGIS "
"Python console, and also how to write algorithms using Python."
msgstr "Dans cette section, nous allons voir comme utiliser des algorithmes issus du module de Traitements à partir de la console Python de QGIS et également comment écrire des algorithmes en Python."

#: ../../source/docs/user_manual/processing/console.rst:41
msgid "Calling algorithms from the Python console"
msgstr "Appeler des algorithmes depuis la console Python"

#: ../../source/docs/user_manual/processing/console.rst:43
msgid ""
"The first thing you have to do is to import the processing functions with "
"the following line:"
msgstr "La première chose à faire est d'importer les fonctions de traitement à l'aide de l'instruction suivante:"

#: ../../source/docs/user_manual/processing/console.rst:50
msgid ""
"Now, there is basically just one (interesting) thing you can do with that "
"from the console: execute an algorithm. That is done using the :meth:`run "
"<qgis.core.QgsProcessingAlgorithm.run>` method, which takes the name of the "
"algorithm to execute as its first parameter, and then a variable number of "
"additional parameters depending on the requirements of the algorithm. So the"
" first thing you need to know is the name of the algorithm to execute. That "
"is not the name you see in the toolbox, but rather a unique command–line "
"name. To find the right name for your algorithm, you can use the "
":class:`processingRegistry <qgis.core.QgsProcessingRegistry>`. Type the "
"following line in your console:"
msgstr "A présent, la seule instruction (intéressante) à faire est d'exécuter un algorithme. Cela est effectué en utilisant la méthode :meth:`run <qgis.core.QgsProcessingAlgorithm.run>`, qui prend en premier paramètre le nom de l'algorithme à lancer, puis tous les paramètres nécessaires à son exécution. Vous devez donc connaître le nom de commande de l'algorithme, qui peut être différent de celui affiché dans la boîte à outils. Pour le trouver, vous pouvez utiliser :class:`processingRegistry <qgis.core.QgsProcessingRegistry>` en tapant dans la console la commande suivante :"

#: ../../source/docs/user_manual/processing/console.rst:67
msgid ""
"You will see something like this (with some extra dashes added to improve "
"readability)."
msgstr "Vous obtiendrez quelque chose de ce genre (avec quelques tirets en plus pour la lisibilité)."

#: ../../source/docs/user_manual/processing/console.rst:87
msgid ""
"That's a list of all the available algorithm IDs, sorted by provider name "
"and algorithm name, along with their corresponding names."
msgstr "Il s'agit là de la liste des identifiants de tous les algorithmes disponibles, triés par le nom du fournisseur puis l'ID de l'algorithme, accompagnés du nom littéral de l'algorithme."

#: ../../source/docs/user_manual/processing/console.rst:90
msgid ""
"Once you know the command-line name of the algorithm, the next thing to do "
"is to determine the right syntax to execute it. That means knowing which "
"parameters are needed when calling the ``run()`` method."
msgstr "Une fois trouvé le nom de commande de l'algorithme, il s'agit de connaître la bonne syntaxe pour l'exécuter. Cela comprend la liste des paramètres à fournir à l'appel de la méthode ``run()``."

#: ../../source/docs/user_manual/processing/console.rst:94
msgid ""
"There is a method to describe an algorithm in detail, which can be used to "
"get a list of the parameters that an algorithm requires and the outputs that"
" it will generate. To get this information, you can use the "
"``algorithmHelp(id_of_the_algorithm)`` method. Use the ID of the algorithm, "
"not the full descriptive name."
msgstr "Une méthode est destinée à décrire en détail un algorithme et renvoie la liste des paramètres nécessaires et le type de sorties générées. Il s'agit de la méthode ``algorithmHelp(id_algorithme)``. Veillez à bien utiliser l'ID de l'algorithme et non le nom descriptif."

#: ../../source/docs/user_manual/processing/console.rst:100
msgid ""
"Calling the method with ``native:buffer`` as parameter (``qgis:buffer`` is "
"an alias for ``native:buffer`` and will also work), you get the following "
"description:"
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:228
msgid ""
"Now you have everything you need to run any algorithm. As we have already "
"mentioned, algorithms can be run using: ``run()``. Its syntax is as follows:"
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:236
msgid ""
"Where parameters is a dictionary of parameters that depend on the algorithm "
"you want to run, and is exactly the list that the ``algorithmHelp()`` method"
" gives you."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:252
msgid ""
"If a parameter is optional and you do not want to use it, then don't include"
" it in the dictionary."
msgstr "Lorsqu'un paramètre est facultatif et que vous ne souhaitez pas l'utiliser, ne l'incluez pas dans le dictionnaire."

#: ../../source/docs/user_manual/processing/console.rst:255
msgid "If a parameter is not specified, the default value will be used."
msgstr "Lorsqu'un paramètre n'est pas indiqué, sa valeur par défaut est appliquée."

#: ../../source/docs/user_manual/processing/console.rst:257
msgid ""
"Depending on the type of parameter, values are introduced differently. The "
"next list gives a quick review of how to introduce values for each type of "
"input parameter:"
msgstr "Selon le type de paramètre, les valeurs peuvent être fournies selon plusieurs manières. Une rapide description de ces possibilités est donnée pour chaque type de paramètre d'entrée :"

#: ../../source/docs/user_manual/processing/console.rst:260
msgid ""
"Raster Layer, Vector Layer or Table. Simply use a string with the name that "
"identifies the data object to use (the name it has in the QGIS Table of "
"Contents) or a filename (if the corresponding layer is not opened, it will "
"be opened but not added to the map canvas). If you have an instance of a "
"QGIS object representing the layer, you can also pass it as parameter."
msgstr "Les couches raster, vectorielles ou les tables. Indiquez simplement le nom identifiant la donnée (le nom dans la liste de couches de QGIS) ou un nom de fichier (si la couche n'a pas encore été ouverte, elle sera chargée mais pas ajoutée au canevas). Si vous avez une instance d'un objet QGIS représentant une couche, vous pouvez également la transmettre en paramètre."

#: ../../source/docs/user_manual/processing/console.rst:265
msgid ""
"Enumeration. If an algorithm has an enumeration parameter, the value of that"
" parameter should be entered using an integer value. To know the available "
"options, you can use the ``algorithmHelp()`` command, as above. For "
"instance, the \"native.buffer\" algorithm has an enumeration called "
"JOIN_STYLE:"
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:286
msgid ""
"In this case, the parameter has three options. Notice that ordering is zero-"
"based."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:288
msgid "Boolean.  Use ``True`` or ``False``."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:289
msgid ""
"Multiple input. The value is a string with input descriptors separated by "
"semicolons (``;``). As in the case of single layers or tables, each input "
"descriptor can be the data object name, or its file path."
msgstr "Entrées multiples. La valeur est une chaîne de caractères, avec les entrées séparées par des points-virgules  (``;``). Comme pour les couches simples et les tables, chaque élément d'entrée peut être le nom d'une variable objet ou un nom de fichier."

#: ../../source/docs/user_manual/processing/console.rst:292
msgid ""
"Table Field from XXX. Use a string with the name of the field to use. This "
"parameter is case-sensitive."
msgstr "Champ de la table XXX. Insérez une chaîne de caractère contenant le nom du champ à utiliser. Ce paramètre est sensible à la casse."

#: ../../source/docs/user_manual/processing/console.rst:294
msgid ""
"Fixed Table. Type the list of all table values separated by commas (``,``) "
"and enclosed between quotes (``\"``). Values start on the upper row and go "
"from left to right. You can also use a 2-D array of values representing the "
"table."
msgstr "Table fixée. Entrez la liste de toutes les valeurs, séparées par des virgules (``,``) et entre guillemets (``\"``). Les valeurs commencent par la première ligne et se lisent de gauche à droite. Vous pouvez aussi utiliser un tableau à deux dimensions pour représenter la table."

#: ../../source/docs/user_manual/processing/console.rst:297
msgid "CRS. Enter the EPSG code number of the desired CRS."
msgstr "SCR. Entrez le code EPSG du système de coordonnées désiré."

#: ../../source/docs/user_manual/processing/console.rst:298
msgid ""
"Extent. You must use a string with ``xmin``, ``xmax``, ``ymin`` and ``ymax``"
" values separated by commas (``,``)."
msgstr "Étendue. Vous devez fournir une chaîne de caractères avec les valeurs ``xmin``, ``xmax``, ``ymin`` et ``ymax`` séparées par des virgules (``,``)."

#: ../../source/docs/user_manual/processing/console.rst:301
msgid ""
"Boolean, file, string and numerical parameters do not need any additional "
"explanations."
msgstr "Booléen, fichier, chaîne de caractères et valeurs numériques ne nécessitent pas d'explications particulières."

#: ../../source/docs/user_manual/processing/console.rst:304
msgid ""
"Input parameters such as strings, booleans, or numerical values have default"
" values. The default value is used if the corresponding parameter entry is "
"missing."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:307
msgid ""
"For output data objects, type the file path to be used to save it, just as "
"it is done from the toolbox. If the output object is not specified, the "
"result is saved to a temporary file (or skipped if it is an optional "
"output). The extension of the file determines the file format. If you enter "
"a file extension not supported by the algorithm, the default file format for"
" that output type will be used, and its corresponding extension appended to "
"the given file path."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:315
msgid ""
"Unlike when an algorithm is executed from the toolbox, outputs are not added"
" to the map canvas if you execute that same algorithm from the Python "
"console using ``run()``, but ``runAndLoadResults()`` will do that."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:320
msgid ""
"The ``run`` method returns a dictionary with one or more output names (the "
"ones shown in the algorithm description) as keys and the file paths of those"
" outputs as values:"
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:337
msgid ""
"You can load feature output by passing the corresponding file paths to the "
"``load()`` method. Or you could use ``runAndLoadResults()`` instead of "
"``run()`` to load them immediately."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:343
msgid "Creating scripts and running them from the toolbox"
msgstr "Créer des scripts et les exécuter depuis la boîte à outils"

#: ../../source/docs/user_manual/processing/console.rst:345
msgid ""
"You can create your own algorithms by writing Python code. Processing "
"scripts extend :class:`QgsProcessingAlgorithm "
"<qgis.core.QgsProcessingAlgorithm>`, so you need to add some extra lines of "
"code to implement mandatory functions. You can find :guilabel:`Create new "
"script` (clean sheet) and :guilabel:`Create New Script from Template` "
"(template that includes code for mandatory functions of "
":class:`QgsProcessingAlgorithm <qgis.core.QgsProcessingAlgorithm>`) under "
"the :guilabel:`Scripts` dropdown menu on the top of the Processing toolbox. "
"The Processing Script Editor will open, and that's where you should type "
"your code. Saving the script from there in the :file:`scripts` folder (the "
"default folder when you open the save file dialog) with a :file:`.py` "
"extension should create the corresponding algorithm."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:360
msgid ""
"The name of the algorithm (the one you will see in the toolbox) is defined "
"within the code."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:363
msgid ""
"Let's have a look at the following code, which defines a Processing "
"algorithm that performs a buffer operation with a user defined buffer "
"distance on a vector layer that is specified by the user, after first "
"smoothing the layer."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:427
msgid ""
"After doing the necessary imports, the following "
":class:`QgsProcessingAlgorithm <qgis.core.QgsProcessingAlgorithm>` functions"
" are specified:"
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:431
msgid ""
":meth:`name <qgis.core.QgsProcessingAlgorithm.name>`: The id of the "
"algorithm (lowercase)."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:433
msgid ""
":meth:`displayName <qgis.core.QgsProcessingAlgorithm.displayName>`: A human "
"readable name for the algorithm."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:435
msgid ""
":meth:`createInstance <qgis.core.QgsProcessingAlgorithm.createInstance>`: "
"Create a new instance of the algorithm class."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:437
msgid ""
":meth:`initAlgorithm <qgis.core.QgsProcessingAlgorithm.initAlgorithm>`: "
"Configure the parameterDefinitions and outputDefinitions."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:440
msgid ""
"Here you describe the parameters and output of the algorithm.  In this case,"
" a feature source for the input, a feature sink for the result and a number "
"for the buffer distance."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:443
msgid ""
":meth:`processAlgorithm "
"<qgis.core.QgsProcessingAlgorithm.processAlgorithm>`: Do the work."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:446
msgid ""
"Here we first run the ``smoothgeometry`` algorithm to smooth the geometry, "
"and then we run the ``buffer`` algorithm on the smoothed output. To be able "
"to run algorithms from within another algorithm we have to define a dummy "
"function for the ``onFinish`` parameter for ``run``. This is the "
"``no_post_process`` function. You can see how input and output parameters "
"are used as parameters to the ``smoothgeometry`` and ``buffer`` algorithms."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:455
msgid ""
"There are a number of different parameter types available for input and "
"output. Below is an alphabetically sorted list:"
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:458
msgid ""
":class:`QgsProcessingParameterBand <qgis.core.QgsProcessingParameterBand>`"
msgstr ":class:`QgsProcessingParameterBand <qgis.core.QgsProcessingParameterBand>`"

#: ../../source/docs/user_manual/processing/console.rst:459
msgid ""
":class:`QgsProcessingParameterBoolean "
"<qgis.core.QgsProcessingParameterBoolean>`"
msgstr ":class:`QgsProcessingParameterBoolean <qgis.core.QgsProcessingParameterBoolean>`"

#: ../../source/docs/user_manual/processing/console.rst:460
msgid ""
":class:`QgsProcessingParameterCrs <qgis.core.QgsProcessingParameterCrs>`"
msgstr ":class:`QgsProcessingParameterCrs <qgis.core.QgsProcessingParameterCrs>`"

#: ../../source/docs/user_manual/processing/console.rst:461
msgid ""
":class:`QgsProcessingParameterDistance "
"<qgis.core.QgsProcessingParameterDistance>`"
msgstr ":class:`QgsProcessingParameterDistance <qgis.core.QgsProcessingParameterDistance>`"

#: ../../source/docs/user_manual/processing/console.rst:462
msgid ""
":class:`QgsProcessingParameterEnum <qgis.core.QgsProcessingParameterEnum>`"
msgstr ":class:`QgsProcessingParameterEnum <qgis.core.QgsProcessingParameterEnum>`"

#: ../../source/docs/user_manual/processing/console.rst:463
msgid ""
":class:`QgsProcessingParameterExpression "
"<qgis.core.QgsProcessingParameterExpression>`"
msgstr ":class:`QgsProcessingParameterExpression <qgis.core.QgsProcessingParameterExpression>`"

#: ../../source/docs/user_manual/processing/console.rst:464
msgid ""
":class:`QgsProcessingParameterExtent "
"<qgis.core.QgsProcessingParameterExtent>`"
msgstr ":class:`QgsProcessingParameterExtent <qgis.core.QgsProcessingParameterExtent>`"

#: ../../source/docs/user_manual/processing/console.rst:465
msgid ""
":class:`QgsProcessingParameterFeatureSink "
"<qgis.core.QgsProcessingParameterFeatureSink>`"
msgstr ":class:`QgsProcessingParameterFeatureSink <qgis.core.QgsProcessingParameterFeatureSink>`"

#: ../../source/docs/user_manual/processing/console.rst:466
msgid ""
":class:`QgsProcessingParameterFeatureSource "
"<qgis.core.QgsProcessingParameterFeatureSource>`"
msgstr ":class:`QgsProcessingParameterFeatureSource <qgis.core.QgsProcessingParameterFeatureSource>`"

#: ../../source/docs/user_manual/processing/console.rst:467
msgid ""
":class:`QgsProcessingParameterField <qgis.core.QgsProcessingParameterField>`"
" - A field in the attributes table of a vector layer. The name of the layer "
"has to be specified."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:470
msgid ""
":class:`QgsProcessingParameterFile <qgis.core.QgsProcessingParameterFile>`"
msgstr ":class:`QgsProcessingParameterFile <qgis.core.QgsProcessingParameterFile>`"

#: ../../source/docs/user_manual/processing/console.rst:471
msgid ""
":class:`QgsProcessingParameterFileDestination "
"<qgis.core.QgsProcessingParameterFileDestination>`"
msgstr ":class:`QgsProcessingParameterFileDestination <qgis.core.QgsProcessingParameterFileDestination>`"

#: ../../source/docs/user_manual/processing/console.rst:472
msgid ""
":class:`QgsProcessingParameterFolderDestination "
"<qgis.core.QgsProcessingParameterFolderDestination>`"
msgstr ":class:`QgsProcessingParameterFolderDestination <qgis.core.QgsProcessingParameterFolderDestination>`"

#: ../../source/docs/user_manual/processing/console.rst:473
msgid ""
":class:`QgsProcessingParameterMapLayer "
"<qgis.core.QgsProcessingParameterMapLayer>`"
msgstr ":class:`QgsProcessingParameterMapLayer <qgis.core.QgsProcessingParameterMapLayer>`"

#: ../../source/docs/user_manual/processing/console.rst:474
msgid ""
":class:`QgsProcessingParameterMatrix "
"<qgis.core.QgsProcessingParameterMatrix>`"
msgstr ":class:`QgsProcessingParameterMatrix <qgis.core.QgsProcessingParameterMatrix>`"

#: ../../source/docs/user_manual/processing/console.rst:475
msgid ""
":class:`QgsProcessingParameterMultipleLayers "
"<qgis.core.QgsProcessingParameterMultipleLayers>`"
msgstr ":class:`QgsProcessingParameterMultipleLayers <qgis.core.QgsProcessingParameterMultipleLayers>`"

#: ../../source/docs/user_manual/processing/console.rst:476
msgid ""
":class:`QgsProcessingParameterNumber "
"<qgis.core.QgsProcessingParameterNumber>`"
msgstr ":class:`QgsProcessingParameterNumber <qgis.core.QgsProcessingParameterNumber>`"

#: ../../source/docs/user_manual/processing/console.rst:477
msgid ""
":class:`QgsProcessingParameterPoint <qgis.core.QgsProcessingParameterPoint>`"
msgstr ":class:`QgsProcessingParameterPoint <qgis.core.QgsProcessingParameterPoint>`"

#: ../../source/docs/user_manual/processing/console.rst:478
msgid ""
":class:`QgsProcessingParameterRange <qgis.core.QgsProcessingParameterRange>`"
msgstr ":class:`QgsProcessingParameterRange <qgis.core.QgsProcessingParameterRange>`"

#: ../../source/docs/user_manual/processing/console.rst:479
msgid ""
":class:`QgsProcessingParameterRasterDestination "
"<qgis.core.QgsProcessingParameterRasterDestination>`"
msgstr ":class:`QgsProcessingParameterRasterDestination <qgis.core.QgsProcessingParameterRasterDestination>`"

#: ../../source/docs/user_manual/processing/console.rst:480
msgid ""
":class:`QgsProcessingParameterRasterLayer "
"<qgis.core.QgsProcessingParameterRasterLayer>`"
msgstr ":class:`QgsProcessingParameterRasterLayer <qgis.core.QgsProcessingParameterRasterLayer>`"

#: ../../source/docs/user_manual/processing/console.rst:481
msgid ""
":class:`QgsProcessingParameterString "
"<qgis.core.QgsProcessingParameterString>`"
msgstr ":class:`QgsProcessingParameterString <qgis.core.QgsProcessingParameterString>`"

#: ../../source/docs/user_manual/processing/console.rst:482
msgid ""
":class:`QgsProcessingParameterVectorDestination "
"<qgis.core.QgsProcessingParameterVectorDestination>`"
msgstr ":class:`QgsProcessingParameterVectorDestination <qgis.core.QgsProcessingParameterVectorDestination>`"

#: ../../source/docs/user_manual/processing/console.rst:483
msgid ""
":class:`QgsProcessingParameterVectorLayer "
"<qgis.core.QgsProcessingParameterVectorLayer>`"
msgstr ":class:`QgsProcessingParameterVectorLayer <qgis.core.QgsProcessingParameterVectorLayer>`"

#: ../../source/docs/user_manual/processing/console.rst:485
msgid ""
"The first parameter to the constructors is the name of the parameter, and "
"the second is the description of the parameter (for the user interface). The"
" rest of the constructor parameters are parameter type specific."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:490
msgid ""
"The input can be turned into QGIS classes using the ``parameterAs`` "
"functions of :class:`QgsProcessingAlgorithm "
"<qgis.core.QgsProcessingAlgorithm>`. For instance to get the number provided"
" for the buffer distance as a double::"
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:496
msgid ""
"The ``processAlgorithm`` function should return a dictionary containing "
"values for every output defined by the algorithm. This allows access to "
"these outputs from other algorithms, including other algorithms contained "
"within the same model."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:501
msgid ""
"Well behaved algorithms should define and return as many outputs as makes "
"sense. Non-feature outputs, such as numbers and strings, are very useful "
"when running your algorithm as part of a larger model, as these values can "
"be used as input parameters for subsequent algorithms within the model. "
"Consider adding numeric outputs for things like the number of features "
"processed, the number of invalid features encountered, the number of "
"features output, etc. The more outputs you return, the more useful your "
"algorithm becomes!"
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:511
msgid "Feedback"
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:513
msgid ""
"The :class:`feedback <qgis.core.QgsProcessingFeedback>` object passed to "
":meth:`processAlgorithm <qgis.core.QgsProcessingAlgorithm.processAlgorithm>`"
" should be used for user feedback / interaction. You can use the "
":meth:`setProgress <qgis.core.QgsFeedback.setProgress>` function of the "
":class:`feedback <qgis.core.QgsProcessingFeedback>` object to update the "
"progress bar (0 to 100) to inform the user about the progress of the "
"algorithm. This is very useful if your algorithm takes a long time to "
"complete."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:521
msgid ""
"The :class:`feedback <qgis.core.QgsProcessingFeedback>` object provides an "
":meth:`isCanceled <qgis.core.QgsFeedback.isCanceled>` method that should be "
"monitored to enable cancelation of the algorithm by the user. The "
":meth:`pushInfo <qgis.core.QgsProcessingFeedback.pushInfo>` method of "
":class:`feedback <qgis.core.QgsProcessingFeedback>` can be used to send "
"information to the user, and :meth:`reportError "
"<qgis.core.QgsProcessingFeedback.reportError>` is handy for pushing non-"
"fatal errors to users."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:529
msgid ""
"Algorithms should avoid using other forms of providing feedback to users, "
"such as print statements or logging to :class:`QgsMessageLog "
"<qgis.core.QgsMessageLog>`, and should always use the feedback object "
"instead. This allows verbose logging for the algorithm, and is also thread-"
"safe (which is important, given that algorithms are typically run in a "
"background thread)."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:538
msgid "Handling errors"
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:540
msgid ""
"If your algorithm encounters an error which prevents it from executing, such"
" as invalid input values or some other condition from which it cannot or "
"should not recover, then you should raise a :class:`QgsProcessingException "
"<qgis.core.QgsProcessingException>`. E.g.::"
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:549
msgid ""
"Try to avoid raising :class:`QgsProcessingException "
"<qgis.core.QgsProcessingException>` for non-fatal errors (e.g. when a "
"feature has a null geometry), and instead just report these errors via "
"``feedback.reportError()`` and skip the feature. This helps make your "
"algorithm \"model-friendly\", as it avoids halting the execution of an "
"entire algorithm when a non-fatal error is encountered."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:559
msgid "Documenting your scripts"
msgstr "Documenter ses scripts"

#: ../../source/docs/user_manual/processing/console.rst:561
msgid ""
"As in the case of models, you can create additional documentation for your "
"scripts, to explain what they do and how to use them."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:564
msgid ""
":class:`QgsProcessingAlgorithm <qgis.core.QgsProcessingAlgorithm>` provides "
"the :meth:`helpString <qgis.core.QgsProcessingAlgorithm.helpString>`, "
":meth:`shortHelpString <qgis.core.QgsProcessingAlgorithm.shortHelpString>` "
"and :meth:`helpUrl <qgis.core.QgsProcessingAlgorithm.helpUrl>` functions for"
" that purpose. Specify / override these to provide more help to the user."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:570
msgid ""
":meth:`shortDescription <qgis.core.QgsProcessingAlgorithm.shortDescription>`"
" is used in the tooltip when hovering over the algorithm in the toolbox."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:574
msgid "Pre- and post-execution script hooks"
msgstr "Scripts de pré et post-exécution"

#: ../../source/docs/user_manual/processing/console.rst:576
msgid ""
"Scripts can also be used as pre- and post-execution hooks that are run "
"before and after an algorithm is run, respectively. This can be used to "
"automate tasks that should be performed whenever an algorithm is executed."
msgstr ""

#: ../../source/docs/user_manual/processing/console.rst:580
msgid ""
"The syntax is identical to the syntax explained above, but an additional "
"global variable named ``alg`` is available, representing the algorithm that "
"has just been (or is about to be) executed."
msgstr "La syntaxe est identique à celle qui est expliquée plus haut mais une variable globale nommée ``alg`` est disponible. Elle représente l'objet alogrithme qui vient (ou qui va) être lancé."

#: ../../source/docs/user_manual/processing/console.rst:584
msgid ""
"In the :guilabel:`General` group of the processing options dialog, you will "
"find two entries named :guilabel:`Pre-execution script` and :guilabel:`Post-"
"execution script` where the filenames of the scripts to be run in each case "
"can be entered."
msgstr ""

#~ msgid "|updatedisclaimer|"
#~ msgstr ""

#~ msgid ""
#~ "There is not a processing console in QGIS, but all processing commands are "
#~ "available instead from the QGIS built-in :ref:`Python console <console>`. "
#~ "That means that you can incorporate those commands into your console work "
#~ "and connect processing algorithms to all the other features (including "
#~ "methods from the QGIS API) available from there."
#~ msgstr ""

#~ msgid ""
#~ "Now, there is basically just one (interesting) thing you can do with that "
#~ "from the console: execute an algorithm. That is done using the ``runalg()`` "
#~ "method, which takes the name of the algorithm to execute as its first "
#~ "parameter, and then a variable number of additional parameters depending on "
#~ "the requirements of the algorithm. So the first thing you need to know is "
#~ "the name of the algorithm to execute. That is not the name you see in the "
#~ "toolbox, but rather a unique command–line name. To find the right name for "
#~ "your algorithm, you can use the ``algslist()`` method. Type the following "
#~ "line in your console:"
#~ msgstr ""

#~ msgid "You will see something like this."
#~ msgstr ""

#~ msgid ""
#~ "That's a list of all the available algorithms, alphabetically ordered, along"
#~ " with their corresponding command-line names."
#~ msgstr ""

#~ msgid ""
#~ "You can use a string as a parameter for this method. Instead of returning "
#~ "the full list of algorithms, it will only display those that include that "
#~ "string. If, for instance, you are looking for an algorithm to calculate "
#~ "slope from a DEM, type ``alglist(\"slope\")`` to get the following result::"
#~ msgstr ""

#~ msgid ""
#~ "This result might change depending on the algorithms you have available."
#~ msgstr ""

#~ msgid ""
#~ "It is easier now to find the algorithm you are looking for and its command-"
#~ "line name, in this case ``saga:slopeaspectcurvature``."
#~ msgstr ""

#~ msgid ""
#~ "Once you know the command-line name of the algorithm, the next thing to do "
#~ "is to determine the right syntax to execute it. That means knowing which "
#~ "parameters are needed and the order in which they have to be passed when "
#~ "calling the ``runalg()`` method. There is a method to describe an algorithm "
#~ "in detail, which can be used to get a list of the parameters that an "
#~ "algorithm requires and the outputs that it will generate. To get this "
#~ "information, you can use the ``alghelp(name_of_the_algorithm)`` method. Use "
#~ "the command-line name of the algorithm, not the full descriptive name."
#~ msgstr ""

#~ msgid ""
#~ "Calling the method with ``saga:slopeaspectcurvature`` as parameter, you get "
#~ "the following description:"
#~ msgstr ""

#~ msgid ""
#~ "Now you have everything you need to run any algorithm. As we have already "
#~ "mentioned, there is only one single command to execute algorithms: "
#~ "``runalg()``. Its syntax is as follows:"
#~ msgstr ""

#~ msgid ""
#~ "The list of parameters and outputs to add depends on the algorithm you want "
#~ "to run, and is exactly the list that the ``alghelp()`` method gives you, in "
#~ "the same order as shown."
#~ msgstr ""

#~ msgid ""
#~ "Raster Layer, Vector Layer or Table. Simply use a string with the name that "
#~ "identifies the data object to use (the name it has in the QGIS Table of "
#~ "Contents) or a filename (if the corresponding layer is not opened, it will "
#~ "be opened but not added to the map canvas). If you have an instance of a "
#~ "QGIS object representing the layer, you can also pass it as parameter. If "
#~ "the input is optional and you do not want to use any data object, use "
#~ "``None``."
#~ msgstr ""

#~ msgid ""
#~ "Selection. If an algorithm has a selection parameter, the value of that "
#~ "parameter should be entered using an integer value. To know the available "
#~ "options, you can use the ``algoptions()`` command, as shown in the following"
#~ " example:"
#~ msgstr ""

#~ msgid ""
#~ "In this case, the algorithm has one such parameter, with seven options. "
#~ "Notice that ordering is zero-based."
#~ msgstr ""

#~ msgid ""
#~ "Input parameters such as strings, booleans, or numerical values have default"
#~ " values. To use them, specify ``None`` in the corresponding parameter entry."
#~ msgstr ""

#~ msgid ""
#~ "For output data objects, type the file path to be used to save it, just as "
#~ "it is done from the toolbox. If you want to save the result to a temporary "
#~ "file, use ``None``. The extension of the file determines the file format. If"
#~ " you enter a file extension not supported by the algorithm, the default file"
#~ " format for that output type will be used, and its corresponding extension "
#~ "appended to the given file path."
#~ msgstr ""

#~ msgid ""
#~ "Unlike when an algorithm is executed from the toolbox, outputs are not added"
#~ " to the map canvas if you execute that same algorithm from the Python "
#~ "console. If you want to add an output to the map canvas, you have to do it "
#~ "yourself after running the algorithm. To do so, you can use QGIS API "
#~ "commands, or, even easier, use one of the handy methods provided for such "
#~ "tasks."
#~ msgstr ""

#~ msgid ""
#~ "The ``runalg`` method returns a dictionary with the output names (the ones "
#~ "shown in the algorithm description) as keys and the file paths of those "
#~ "outputs as values. You can load those layers by passing the corresponding "
#~ "file paths to the ``load()`` method."
#~ msgstr ""

#~ msgid "Additional functions for handling data"
#~ msgstr ""

#~ msgid ""
#~ "Apart from the functions used to call algorithms, importing the "
#~ "``processing`` package will also import some additional functions that make "
#~ "it easier to work with data, particularly vector data. They are just "
#~ "convenience functions that wrap some functionality from the QGIS API, "
#~ "usually with a less complex syntax. These functions should be used when "
#~ "developing new algorithms, as they make it easier to operate with input "
#~ "data."
#~ msgstr ""

#~ msgid ""
#~ "Below is a list of some of these commands. More information can be found in "
#~ "the classes under the ``processing/tools`` package, and also in the example "
#~ "scripts provided with QGIS."
#~ msgstr ""

#~ msgid ""
#~ "``getObject(obj)``: Returns a QGIS object (a layer or table) from the passed"
#~ " object, which can be a filename or the name of the object in the QGIS "
#~ "Layers List"
#~ msgstr ""

#~ msgid ""
#~ "``values(layer, fields)``: Returns the values in the attributes table of a "
#~ "vector layer, for the passed fields. Fields can be passed as field names or "
#~ "as zero-based field indices. Returns a dict of lists, with the passed field "
#~ "identifiers as keys. It considers the existing selection."
#~ msgstr ""

#~ msgid ""
#~ "``features(layer)``: Returns an iterator over the features of a vector "
#~ "layer, considering the existing selection."
#~ msgstr ""

#~ msgid ""
#~ "``uniqueValues(layer, field)``: Returns a list of unique values for a given "
#~ "attribute.  Attributes can be passed as a field name or a zero-based field "
#~ "index. It considers the existing selection."
#~ msgstr ""

#~ msgid ""
#~ "You can create your own algorithms by writing the corresponding Python code "
#~ "and adding a few extra lines to supply additional information needed to "
#~ "define the semantics of the algorithm. You can find a :guilabel:`Create new "
#~ "script` menu under the :guilabel:`Tools` group in the :guilabel:`Script` "
#~ "algorithms block of the toolbox. Double-click on it to open the script "
#~ "editing dialog. That's where you should type your code. Saving the script "
#~ "from there in the :file:`scripts` folder (the default folder when you open "
#~ "the save file dialog) with :file:`.py` extension will automatically create "
#~ "the corresponding algorithm."
#~ msgstr ""

#~ msgid ""
#~ "The name of the algorithm (the one you will see in the toolbox) is created "
#~ "from the filename, removing its extension and replacing low hyphens with "
#~ "blank spaces."
#~ msgstr ""

#~ msgid ""
#~ "Let's have a look at the following code, which calculates the Topographic "
#~ "Wetness Index (TWI) directly from a DEM."
#~ msgstr ""

#~ msgid ""
#~ "As you can see, the calculation involves three algorithms, all of them "
#~ "coming from SAGA. The last one calculates the TWI, but it needs a slope "
#~ "layer and a flow accumulation layer. We do not have these layers, but since "
#~ "we have the DEM, we can calculate them by calling the corresponding SAGA "
#~ "algorithms."
#~ msgstr ""

#~ msgid ""
#~ "The part of the code where this processing takes place is not difficult to "
#~ "understand if you have read the previous sections in this chapter. The first"
#~ " lines, however, need some additional explanation. They provide the "
#~ "information that is needed to turn your code into an algorithm that can be "
#~ "run from any of the GUI components, like the toolbox or the graphical "
#~ "modeler."
#~ msgstr ""

#~ msgid ""
#~ "These lines start with a double Python comment symbol (``##``) and have the "
#~ "following structure:"
#~ msgstr ""

#~ msgid ""
#~ "Here is a list of all the parameter types that are supported in processing "
#~ "scripts, their syntax and some examples."
#~ msgstr ""

#~ msgid "``raster``. A raster layer."
#~ msgstr ""

#~ msgid "``vector``. A vector layer."
#~ msgstr ""

#~ msgid "``table``. A table."
#~ msgstr ""

#~ msgid ""
#~ "``number``. A numerical value. A default value must be provided. For "
#~ "instance, ``depth=number 2.4``."
#~ msgstr ""

#~ msgid ""
#~ "``string``. A text string. As in the case of numerical values, a default "
#~ "value must be added. For instance, ``name=string Victor``."
#~ msgstr ""

#~ msgid ""
#~ "``boolean``. A boolean value. Add ``True`` or ``False`` after it to set the "
#~ "default value. For example, ``verbose=boolean True``."
#~ msgstr ""

#~ msgid "``multiple raster``. A set of input raster layers."
#~ msgstr ""

#~ msgid "``multiple vector``. A set of input vector layers."
#~ msgstr ""

#~ msgid ""
#~ "``field``. A field in the attributes table of a vector layer. The name of "
#~ "the layer has to be added after the ``field`` tag. For instance, if you have"
#~ " declared a vector input with ``mylayer=vector``, you could use "
#~ "``myfield=field mylayer`` to add a field from that layer as parameter."
#~ msgstr ""

#~ msgid "``folder``. A folder."
#~ msgstr ""

#~ msgid "``file``. A filename."
#~ msgstr ""

#~ msgid ""
#~ "The parameter name is the name that will be shown to the user when executing"
#~ " the algorithm, and also the variable name to use in the script code. The "
#~ "value entered by the user for that parameter will be assigned to a variable "
#~ "with that name."
#~ msgstr ""

#~ msgid ""
#~ "When showing the name of the parameter to the user, the name will be edited "
#~ "to improve its appearance, replacing low hyphens with spaces. So, for "
#~ "instance, if you want the user to see a parameter named ``A numerical "
#~ "value``, you can use the variable name ``A_numerical_value``."
#~ msgstr ""

#~ msgid ""
#~ "Layers and table values are strings containing the file path of the "
#~ "corresponding object. To turn them into a QGIS object, you can use the "
#~ "``processing.getObjectFromUri()`` function. Multiple inputs also have a "
#~ "string value, which contains the file paths to all selected object, "
#~ "separated by semicolons (``;``)."
#~ msgstr ""

#~ msgid "Outputs are defined in a similar manner, using the following tags:"
#~ msgstr ""

#~ msgid "``output raster``"
#~ msgstr ""

#~ msgid "``output vector``"
#~ msgstr ""

#~ msgid "``output table``"
#~ msgstr ""

#~ msgid "``output html``"
#~ msgstr ""

#~ msgid "``output file``"
#~ msgstr ""

#~ msgid "``output number``"
#~ msgstr ""

#~ msgid "``output string``"
#~ msgstr ""

#~ msgid ""
#~ "The value assigned to the output variables is always a string with a file "
#~ "path. It will correspond to a temporary file path in case the user has not "
#~ "entered any output filename."
#~ msgstr ""

#~ msgid ""
#~ "When you declare an output, the algorithm will try to add it to QGIS once it"
#~ " is finished. That is why, although the ``runalg()`` method does not load "
#~ "the layers it produces, the final TWI layer will be loaded (using the case "
#~ "of our previous example), since it is saved to the file entered by the user,"
#~ " which is the value of the corresponding output."
#~ msgstr ""

#~ msgid ""
#~ "Do not use the ``load()`` method in your script algorithms, just when "
#~ "working with the console line. If a layer is created as output of an "
#~ "algorithm, it should be declared as such. Otherwise, you will not be able to"
#~ " properly use the algorithm in the modeler, since its syntax (as defined by "
#~ "the tags explained above) will not match what the algorithm really creates."
#~ msgstr ""

#~ msgid ""
#~ "Hidden outputs (numbers and strings) do not have a value. Instead, you have "
#~ "to assign a value to them. To do so, just set the value of a variable with "
#~ "the name you used to declare that output. For instance, if you have used "
#~ "this declaration,"
#~ msgstr ""

#~ msgid "the following line will set the value of the output to 5:"
#~ msgstr ""

#~ msgid ""
#~ "In addition to the tags for parameters and outputs, you can also define the "
#~ "group under which the algorithm will be shown, using the ``group`` tag."
#~ msgstr ""

#~ msgid ""
#~ "If your algorithm takes a long time to process, it is a good idea to inform "
#~ "the user. You have a global named ``progress`` available, with two possible "
#~ "methods: ``setText(text)`` and ``setPercentage(percent)`` to modify the "
#~ "progress text and the progress bar."
#~ msgstr ""

#~ msgid ""
#~ "Several examples are provided. Please check them to see real examples of how"
#~ " to create algorithms using the processing framework classes. You can right-"
#~ "click on any script algorithm and select :guilabel:`Edit script` to edit its"
#~ " code or just to see it."
#~ msgstr ""

#~ msgid ""
#~ "As in the case of models, you can create additional documentation for your "
#~ "scripts, to explain what they do and how to use them. In the script editing "
#~ "dialog, you will find an **[Edit script help]** button. Click on it and it "
#~ "will take you to the help editing dialog. Check the section about the "
#~ "graphical modeler to know more about this dialog and how to use it."
#~ msgstr ""

#~ msgid ""
#~ "Help files are saved in the same folder as the script itself, adding the "
#~ ":file:`.help` extension to the filename. Notice that you can edit your "
#~ "script's help before saving the script for the first time. If you later "
#~ "close the script editing dialog without saving the script (i.e., you discard"
#~ " it), the help content you wrote will be lost. If your script was already "
#~ "saved and is associated to a filename, saving the help content is done "
#~ "automatically."
#~ msgstr ""

#~ msgid ""
#~ "Scripts can also be used to set pre- and post-execution hooks that are run "
#~ "before and after an algorithm is run. This can be used to automate tasks "
#~ "that should be performed whenever an algorithm is executed."
#~ msgstr ""

#~ msgid ""
#~ "In the :guilabel:`General` group of the processing configuration dialog, you"
#~ " will find two entries named :guilabel:`Pre-execution script file` and "
#~ ":guilabel:`Post-execution script file` where the filename of the scripts to "
#~ "be run in each case can be entered."
#~ msgstr ""

#~ msgid ""
#~ "Now, there is basically just one (interesting) thing you can do with that "
#~ "from the console: execute an algorithm. That is done using the ``run()`` "
#~ "method, which takes the name of the algorithm to execute as its first "
#~ "parameter, and then a variable number of additional parameters depending on "
#~ "the requirements of the algorithm. So the first thing you need to know is "
#~ "the name of the algorithm to execute. That is not the name you see in the "
#~ "toolbox, but rather a unique command–line name. To find the right name for "
#~ "your algorithm, you can use the processingRegistry. Type the following line "
#~ "in your console:"
#~ msgstr ""

#~ msgid "``name``: The id of the algorithm (lowercase)."
#~ msgstr ""

#~ msgid "``displayName``: A human readable name for the algorithm."
#~ msgstr ""

#~ msgid "``createInstance``: Create a new instance of the algorithm class."
#~ msgstr ""

#~ msgid ""
#~ "``initAlgorithm``: Configure the parameterDefinitions and outputDefinitions."
#~ msgstr ""

#~ msgid "``processAlgorithm``: Do the work."
#~ msgstr ""

#~ msgid ""
#~ "There are a number of different parameter types available for input and "
#~ "output. Their definitions can be found in processing.h.  Below is an "
#~ "alphabetically sorted list (see `the Python API documentation "
#~ "<https://qgis.org/pyqgis/master/core/Processing/QgsProcessingAlgorithm.html>`_"
#~ " for details)."
#~ msgstr ""

#~ msgid "QgsProcessingParameterBand"
#~ msgstr ""

#~ msgid "QgsProcessingParameterBoolean"
#~ msgstr ""

#~ msgid "QgsProcessingParameterCrs"
#~ msgstr ""

#~ msgid "QgsProcessingParameterDistance"
#~ msgstr ""

#~ msgid "QgsProcessingParameterEnum"
#~ msgstr ""

#~ msgid "QgsProcessingParameterExpression"
#~ msgstr ""

#~ msgid "QgsProcessingParameterExtent"
#~ msgstr ""

#~ msgid "QgsProcessingParameterFeatureSink"
#~ msgstr ""

#~ msgid "QgsProcessingParameterFeatureSource"
#~ msgstr ""

#~ msgid ""
#~ "QgsProcessingParameterField - A field in the attributes table of a vector "
#~ "layer.  The name of the layer has to be specified."
#~ msgstr ""

#~ msgid "QgsProcessingParameterFile"
#~ msgstr ""

#~ msgid "QgsProcessingParameterFileDestination"
#~ msgstr ""

#~ msgid "QgsProcessingParameterFolderDestination"
#~ msgstr ""

#~ msgid "QgsProcessingParameterMapLayer"
#~ msgstr ""

#~ msgid "QgsProcessingParameterMatrix"
#~ msgstr ""

#~ msgid "QgsProcessingParameterMultipleLayers"
#~ msgstr ""

#~ msgid "QgsProcessingParameterNumber"
#~ msgstr ""

#~ msgid "QgsProcessingParameterPoint"
#~ msgstr ""

#~ msgid "QgsProcessingParameterRange"
#~ msgstr ""

#~ msgid "QgsProcessingParameterRasterDestination"
#~ msgstr ""

#~ msgid "QgsProcessingParameterRasterLayer"
#~ msgstr ""

#~ msgid "QgsProcessingParameterString"
#~ msgstr ""

#~ msgid "QgsProcessingParameterVectorDestination"
#~ msgstr ""

#~ msgid "QgsProcessingParameterVectorLayer"
#~ msgstr ""

#~ msgid ""
#~ "The ``feedback`` object passed to ``processAlgorithm`` should be used for "
#~ "user feedback / interaction. You can use the ``setProgress`` function of the"
#~ " ``feedback`` object to update the progress bar (0 to 100) to inform the "
#~ "user about the progress of the algorithm.  This is very useful if your "
#~ "algorithm takes a long time to complete. The ``feedback`` object provides an"
#~ " ``isCanceled`` method that should be monitored to enable cancelation of the"
#~ " algorithm by the user. The ``pushInfo`` method of ``feedback`` can be used "
#~ "to send information to the user, and ``reportError`` is handy for pushing "
#~ "non-fatal errors to users."
#~ msgstr ""

#~ msgid ""
#~ ":class:`QgsProcessingAlgorithm <qgis.core.QgsProcessingAlgorithm>` provides "
#~ "the ``helpString()``, ``shortHelpString()`` and ``helpUrl()`` functions for "
#~ "that purpose. Specify / override these to provide more help to the user."
#~ msgstr ""

#~ msgid ""
#~ "``shortDescription()`` (added in 3.4) is used in the tooltip when hovering "
#~ "over the algorithm in the toolbox."
#~ msgstr ""
