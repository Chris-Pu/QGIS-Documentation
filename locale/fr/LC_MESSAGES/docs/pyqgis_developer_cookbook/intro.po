# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# Project package.
# 
# Translators:
# Benoît de Cabissole, 2015
# christophe bocquet <christophe.bocquet@developpement-durable.gouv.fr>, 2017
# Jules GARNIER, 2018
# Médéric RIBREUX <mederic.ribreux__translate@medspx.fr>, 2015
# Nicolas Boisteault <nboisteault@gmail.com>, 2017
# Philippe <philippe.boulinguiez@inrap.fr>, 2017
# Régis Haubourg <regis.haubourg@gmail.com>, 2019
# Robin PREST, 2014
# Sant-anna <delazj@gmail.com>, 2014-2017
# Vincent Picavet <vincent.ml@oslandia.com>, 2013
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-06 11:48+0100\n"
"PO-Revision-Date: 2019-12-06 11:03+0000\n"
"Last-Translator: Richard Duivenvoorde <richard@duif.net>\n"
"Language-Team: French (http://www.transifex.com/qgis/qgis-documentation/language/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:11
msgid "Introduction"
msgstr "Introduction"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:13
msgid ""
"This document is intended to be both a tutorial and a reference guide. While"
" it does not list all possible use cases, it should give a good overview of "
"the principal functionality."
msgstr "Ce document est à la fois un tutoriel et un guide de référence. Il ne liste pas tous les cas d'utilisation possibles, mais donne un bon aperçu des principales fonctionnalités."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:20
msgid ""
"Python support was first introduced in QGIS 0.9. There are several ways to "
"use Python in QGIS Desktop (covered in the following sections):"
msgstr "Le support de Python a été introduit pour la première fois dans QGIS 0.9. Il y a de nombreuses façons d'utiliser du code python dans QGIS ( elles sont traitées en détail dans les sections suivantes):"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:24
msgid "Issue commands in the Python console within QGIS"
msgstr "lancer des commandes dans la console Python de QGIS"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:25
msgid "Create and use plugins"
msgstr "créer et utiliser des extensions"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:26
msgid "Automatically run Python code when QGIS starts"
msgstr "exécuter automatiquement un programme Python quand QGIS démarre"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:27
msgid "Create custom applications based on the QGIS API"
msgstr "créer des applications personnalisées basées sur l'API QGIS"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:29
msgid ""
"Python bindings are also available for QGIS Server, including Python plugins"
" (see :ref:`server_plugins`) and Python bindings that can be used to embed "
"QGIS Server into a Python application."
msgstr "Des liaisons python sont également disponibles pour QGIS Server, ce qui permet de mettre en œuvre des extensions (see :ref:`server_plugins`)  et des liaisons qui peuvent être intégrées pour intégrer QGIS Server dans une application Python."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:36
msgid ""
"There is a :api:`complete QGIS API <>` reference that documents the classes "
"from the QGIS libraries. :pyqgis:`The Pythonic QGIS API (pyqgis) <>` is "
"nearly identical to the C++ API."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:40
msgid ""
"A good resource for learning how to perform common tasks is to download "
"existing plugins from the `plugin repository <https://plugins.qgis.org/>`_ "
"and examine their code."
msgstr "Une bonne méthode pour apprendre à réaliser des tâches classiques est de télécharger des extensions existantes depuis le  `dépôt d'extensions <https://plugins.qgis.org/>` puis d'examiner leur code."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:51
msgid "Scripting in the Python Console"
msgstr "Scripter dans la console Python"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:53
msgid ""
"QGIS provides an integrated :ref:`Python console <console>` for scripting. "
"It can be opened from the :menuselection:`Plugins --> Python Console` menu:"
msgstr "QGIS fourni une console Python intégrée :ref:`Python console <console>` pour créer des scripts. La console peut être ouverte grâce au menu: :menuselection:`Extensions --> Console Python`:"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:60
msgid "QGIS Python console"
msgstr "La Console Python de QGIS"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:62
msgid ""
"The screenshot above illustrates how to get the layer currently selected in "
"the layer list, show its ID and optionally, if it is a vector layer, show "
"the feature count. For interaction with the QGIS environment, there is an "
":data:`iface` variable, which is an instance of :class:`QgisInterface "
"<qgis.gui.QgisInterface>`. This interface allows access to the map canvas, "
"menus, toolbars and other parts of the QGIS application."
msgstr "La capture d'écran ci-dessus montre comment récupérer la couche sélectionnée dans la liste des couches, afficher son identifiant et éventuellement, si c'est une couche vectorielle, afficher le décompte d'entités. Pour interagir avec l'environnement de QGIS, il y a une variable :data:`iface`, instance de la classe :class:`QgsInterface`. Cette interface permet d'accéder au canevas de carte, aux menus, barres d'outils et autres composantes de l'application QGIS."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:71
msgid ""
"For user convenience, the following statements are executed when the console"
" is started (in the future it will be possible to set further initial "
"commands)"
msgstr "Pour simplifier la vie de l'utilisateur, les déclarations suivantes sont exécutées quand la console est ouverte (Dans le future, il sera possible de définir plus de commandes)."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:80
msgid ""
"For those which use the console often, it may be useful to set a shortcut "
"for triggering the console (within :menuselection:`Settings --> Keyboard "
"shortcuts...`)"
msgstr "Pour ceux qui utilisent fréquemment la console, il peut-être utile de configurer un raccourci clavier pour ouvrir la console ( dans :menuselection:`Settings --> Keyboard shortcuts...`)."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:87
msgid "Python Plugins"
msgstr "Extensions Python"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:89
msgid ""
"The functionality of QGIS can be extended using plugins. Plugins can be "
"written in Python. The main advantage over C++ plugins is simplicity of "
"distribution (no compiling for each platform) and easier development."
msgstr "Il est possible d'étendre les fonctionnalités de QGIS en utilisant des extensions. Les extensions peuvent être écrites en Python. Les principaux avantages par rapport aux extensions C++ sont la simplicité de déploiement (pas de compilation pour chaque plateforme) et une plus grande simplicité de développement. "

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:95
msgid ""
"Many plugins covering various functionality have been written since the "
"introduction of Python support. The plugin installer allows users to easily "
"fetch, upgrade and remove Python plugins. See the `Python Plugins "
"<https://plugins.qgis.org/>`_ page for more information about plugins and "
"plugin development."
msgstr "De nombreuses extensions couvrant de nombreuses fonctionnalités ont été écrites depuis l'introduction du support de Python. L'installeur d'extensions permet facilement aux utilisateurs de récupérer, mettre à jour et supprimer des extensions python.  Voir la page des `extensions python <https://plugins.qgis.org/>`_ pour plus d'information sur les extensions et le développement d'extensions. "

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:101
msgid ""
"Creating plugins in Python is simple, see :ref:`developing_plugins` for "
"detailed instructions."
msgstr "Créer des extensions Python est simple. Voir :ref:`developing_plugins` pour des instructions détaillées."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:106
msgid ""
"Python plugins are also available for QGIS server. See :ref:`server_plugins`"
" for further details."
msgstr "Des extensions python sont également disponibles pour QGIS server. Voir la page :ref:`server_plugins` pour plus de détails."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:114
msgid "Running Python code when QGIS starts"
msgstr "Exécuter du code python quand QGIS démarre"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:116
msgid ""
"There are two distinct methods to run Python code every time QGIS starts."
msgstr "Il y a deux façons distinctes d'exécuter un programme Python chaque fois que QGIS démarre."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:119
msgid "Creating a startup.py script"
msgstr "Créer un script startup.py"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:121
msgid ""
"Setting the ``PYQGIS_STARTUP`` environment variable to an existing Python "
"file"
msgstr "Définir la variable d'environnement ``PYQGIS_STARTUP`` sur un fichier python"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:126
msgid "The :file:`startup.py` file"
msgstr "Le fichier : :file:`startup.py`"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:128
msgid "Every time QGIS starts, the user's Python home directory"
msgstr "A chaque démarrage de QGIS, le répertoire python du profil utilisateur"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:130
msgid "Linux: :file:`.local/share/QGIS/QGIS3`"
msgstr "Linux: :file:`.local/share/QGIS/QGIS3`"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:131
msgid "Windows: :file:`AppData\\\\Roaming\\\\QGIS\\\\QGIS3`"
msgstr "Windows: :file:`AppData\\\\Roaming\\\\QGIS\\\\QGIS3`"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:132
msgid "macOS: :file:`Library/Application Support/QGIS/QGIS3`"
msgstr "macOS: :file:`Library/Application Support/QGIS/QGIS3`"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:134
msgid ""
"is searched for a file named :file:`startup.py`. If that file exists, it is "
"executed by the embedded Python interpreter."
msgstr "est exploré à la recherche d'un fichier nommé :file:`startup.py`. Si ce fichier existe, il est exécuté par l'interpréteur python embarqué. "

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:137
msgid ""
"The default path depends on the operating system. To find the path that will"
" work for you, open the Python Console and run "
"``QStandardPaths.standardLocations(QStandardPaths.AppDataLocation)`` to see "
"the list of default directories."
msgstr "Le chemin par défaut dépend du système d'exploitation. Pour trouver le chemin qui fonctionne chez vous, ouvrez la console python et exécutez ``QStandardPaths.standardLocations(QStandardPaths.AppDataLocation)``  pour voir la liste des répertoires par défaut. "

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:146
msgid "The PYQGIS_STARTUP environment variable"
msgstr "La variable d'environment  PYQGIS_STARTUP"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:148
msgid ""
"You can run Python code just before QGIS initialization completes by setting"
" the ``PYQGIS_STARTUP`` environment variable to the path of an existing "
"Python file."
msgstr "Vous pouvez exécuter du code python juste avant la fin de l'initialisation de QGIS en définissant la variable d'environnement ``PYQGIS_STARTUP`` avec le chemin d'un fichier python existant. "

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:152
msgid ""
"This code will run before QGIS initialization is complete. This method is "
"very useful for cleaning sys.path, which may have undesireable paths, or for"
" isolating/loading the initial environment without requiring a virtual "
"environment, e.g. homebrew or MacPorts installs on Mac."
msgstr "Ce code va être exécuté avant la fin de l'initialisation de QGIS. Cette méthode est très utile pour nettoyer le chemin sys.path , qui peut être pollué par d'autres chemins, ou pour isoler ou charger un environnement initial sans recourir à un environnement virtuel, par exemple homebrew ou MacPorts sur MacOS. "

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:165
msgid "Python Applications"
msgstr "Applications Python"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:167
msgid ""
"It is often handy to create  scripts for automating processes. With PyQGIS, "
"this is perfectly possible --- import the :mod:`qgis.core` module, "
"initialize it and you are ready for the processing."
msgstr "Il est souvent pratique de créer des scripts pour automatiser des processus. Avec PyQGIS, cela est parfaitement possible --- importez le module :mod:`qgis.core`, initialisez-le et vous êtes prêt pour le traitement."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:172
msgid ""
"Or you may want to create an interactive application that uses GIS "
"functionality --- perform measurements, export a map as PDF, ... The "
":mod:`qgis.gui` module provides various GUI components, most notably the map"
" canvas widget that can be incorporated into the application with support "
"for zooming, panning and/or any further custom map tools."
msgstr "Vous pouvez aussi souhaiter créer une application interactive utilisant certaines fonctionnalités SIG --- mesurer des données, exporter une carte en PDF, .... Le module :mod:`qgis.gui` fourni différentes composantes de l'interface, le plus notable étant le canevas de carte qui peut être facilement intégré dans l'application, avec le support du zoom, du déplacement ou de tout autre outil personnalisé de cartographie."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:179
msgid ""
"PyQGIS custom applications or standalone scripts must be configured to "
"locate the QGIS resources, such as projection information and providers for "
"reading vector and raster layers. QGIS Resources are initialized by adding a"
" few lines to the beginning of your application or script. The code to "
"initialize QGIS for custom applications and standalone scripts is similar. "
"Examples of each are provided below."
msgstr "Les applications personnalisées de PyQGIS ou les scripts doivent être configurés pour trouver les ressources QGIS, comme les informations sur les projections et les fournisseurs de données pour lire des couches vecteurs ou raster. Les ressources QGIS sont initialisées en ajoutant quelques lignes au début de votre application ou de votre script. Le code pour initialiser QGIS pour des applications sur mesure ou des scripts autonomes est similaire. Des exemples sont fournis ci dessous. "

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:189
msgid ""
"Do *not* use :file:`qgis.py` as a name for your script. Python will not be "
"able to import the bindings as the script's name will shadow them."
msgstr "Note: *ne pas* utiliser :file:`qgis.py` comme nom de script test --- Python ne sera pas en mesure d'importer les dépendances étant donné qu'elles sont occultées par le nom du script."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:196
msgid "Using PyQGIS in standalone scripts"
msgstr "Utiliser PyQGIS dans des scripts indépendants"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:198
msgid ""
"To start a standalone script, initialize the QGIS resources at the beginning"
" of the script:"
msgstr "Pour commencer un script indépendant, initialisez les ressources QGIS au début du script tel que dans le code suivant:"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:223
msgid ""
"First we import the :mod:`qgis.core` module and configure the prefix path. "
"The prefix path is the location where QGIS is installed on your system. It "
"is configured in the script by calling the :meth:`setPrefixPath "
"<qgis.core.QgsApplication.setPrefixPath>` method. The second argument of "
":meth:`setPrefixPath <qgis.core.QgsApplication.setPrefixPath>` is set to "
"``True``, specifying that default paths are to be used."
msgstr "Nous commençons par importer le module :mod:`qgis.core` puis nous configurons le chemin de préfixe. Le chemin de préfixe est l'endroit où QGIS est installé sur votre système. Il est configuré dans le script en faisant appel à la méthode ``setPrefixPath``. Le second argument :meth:`setPrefixPath <qgis.core.QgsApplication.setPrefixPath>`  est mis à :const:`True`, ce qui contrôle si les chemins par défaut sont utilisés."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:232
msgid ""
"The QGIS install path varies by platform; the easiest way to find it for "
"your system is to use the :ref:`pythonconsole` from within QGIS and look at "
"the output from running ``QgsApplication.prefixPath()``."
msgstr "Le chemin d'installation de QGIS varie selon les plateformes; le moyen le plus simple pour trouver celle qui correspond à votre système est d'utiliser la console  :ref:`pythonconsole` depuis QGIS et de vérifier la sortie de la commande ``QgsApplication.prefixPath()``."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:237
msgid ""
"After the prefix path is configured, we save a reference to "
"``QgsApplication`` in the variable ``qgs``. The second argument is set to "
"``False``, specifying that we do not plan to use the GUI since we are "
"writing a standalone script. With ``QgsApplication`` configured, we load the"
" QGIS data providers and layer registry by calling the ``qgs.initQgis()`` "
"method. With QGIS initialized, we are ready to write the rest of the script."
" Finally, we wrap up by calling ``qgs.exitQgis()`` to remove the data "
"providers and layer registry from memory."
msgstr "Une fois la configuration du chemin faite, nous sauvegardons une références à ``QgsApplication`` dans la variable ``qgs``. Le second argument est défini à ``False``, indiquant que n'allons pas utiliser une interface graphique puisque nous écrivons un script autonome. ``QgsApplication`` étant configuré, nous chargeons les fournisseurs de données de QGIS et le registre de couches via la méthode ``qgs.initQgis()``. QGIS étant initialisé, nous sommes prêts à écrire le reste de notre script. Pour finir, nous utilisons ``qgs.exitQgis()`` pour nous assurer de supprimer de la mémoire les fournisseurs de données et le registre de couches."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:249
msgid "Using PyQGIS in custom applications"
msgstr "Utiliser PyQGIS dans une application personnalisée "

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:251
msgid ""
"The only difference between :ref:`standalonescript` and a custom PyQGIS "
"application is the second argument when instantiating the "
"``QgsApplication``. Pass ``True`` instead of ``False`` to indicate that we "
"plan to use a GUI."
msgstr "La seule différence entre :ref:`standalonescript` et une application PyQGIS personnalisée réside dans le second argument lors de l'initialisation de ``QgsApplication``. Passer :const:`True` au lieu de ``False`` pour indiquer que nous allons utiliser une interface graphique."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:280
msgid ""
"Now you can work with the QGIS API - load layers and do some processing or "
"fire up a GUI with a map canvas. The possibilities are endless :-)"
msgstr "Maintenant, vous pouvez travailler avec l'API de QGIS - charger des couches et effectuer des traitements ou lancer une interface graphique avec un canevas de carte. Les possibilités sont infinies :-)"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:288
msgid "Running Custom Applications"
msgstr "Exécuter des applications personnalisées"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:290
msgid ""
"You need to tell your system where to search for QGIS libraries and "
"appropriate Python modules if they are not in a well-known location - "
"otherwise Python will complain::"
msgstr "Vous devrez indiquer au système où chercher les librairies de QGIS et les modules Python appropriés s'ils ne sont pas à un emplacement connu - autrement, Python se plaindra::"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:297
msgid ""
"This can be fixed by setting the ``PYTHONPATH`` environment variable. In the"
" following commands, ``<qgispath>`` should be replaced with your actual QGIS"
" installation path:"
msgstr "Ceci peut être corrigé en définissant la variable d'environnement ``PYTHONPATH``. Dans les commandes suivantes, ``<qgispath>`` doit être remplacé par le réel chemin d'accès au dossier d'installation de QGIS:"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:301
msgid "on Linux: :command:`export PYTHONPATH=/<qgispath>/share/qgis/python`"
msgstr "sur Linux: :command:`export PYTHONPATH=/<qgispath>/share/qgis/python`"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:302
msgid "on Windows: :command:`set PYTHONPATH=c:\\\\<qgispath>\\\\python`"
msgstr "sur Windows: :command:`set PYTHONPATH=c:\\\\<qgispath>\\\\python`"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:303
msgid ""
"on macOS: :command:`export PYTHONPATH=/<qgispath>/Contents/Resources/python`"
msgstr "sur macOS: :command:`export PYTHONPATH=/<qgispath>/Contents/Resources/python`"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:305
msgid ""
"Now, the path to the PyQGIS modules is known, but they depend on the "
"``qgis_core`` and ``qgis_gui`` libraries (the Python modules serve only as "
"wrappers). The path to these libraries may be unknown to the operating "
"system, and then you will get an import error again (the message might vary "
"depending on the system)::"
msgstr "Le chemin vers les modules PyQGIS est maintenant connu. Néanmoins, ils dépendent des bibliothèques ``qgis_core`` et ``qgis_gui`` (les modules Python qui servent d'encapsulage). Le chemin vers ces bibliothèques peut être inconnu du système d'exploitation auquel cas vous auriez de nouveau une erreur d'import (le message peut varier selon le système)::"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:315
msgid ""
"Fix this by adding the directories where the QGIS libraries reside to the "
"search path of the dynamic linker:"
msgstr "Corrigez ce problème en ajoutant les répertoires d'emplacement des bibliothèques QGIS au chemin de recherche de l'éditeur dynamique de liens:"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:318
msgid "on Linux: :command:`export LD_LIBRARY_PATH=/<qgispath>/lib`"
msgstr "sur Linux: :command:`export LD_LIBRARY_PATH=/<qgispath>/lib`"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:319
msgid ""
"on Windows: :command:`set "
"PATH=C:\\\\<qgispath>\\\\bin;C:\\\\<qgispath>\\\\apps\\\\<qgisrelease>\\\\bin;%PATH%`"
" where ``<qgisrelease>`` should be replaced with the type of release you are"
" targeting (eg, ``qgis-ltr``, ``qgis``, ``qgis-dev``)"
msgstr "sur Windows: :command:`set PATH=C:\\\\<qgispath>\\\\bin;C:\\\\<qgispath>\\\\apps\\\\<qgisrelease>\\\\bin;%PATH%` où ``<qgisrelease>`` devra être remplacé avec le type de release que vous ciblez (ex. ``qgis-ltr``, ``qgis``, ``qgis-dev``)"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:323
msgid ""
"These commands can be put into a bootstrap script that will take care of the"
" startup. When deploying custom applications using PyQGIS, there are usually"
" two possibilities:"
msgstr "Ces commandes peuvent être écrites dans un script de lancement qui gérera le démarrage. Lorsque vous déployez des applications personnalisées qui utilisent PyQGIS, il existe généralement deux possibilités:"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:327
msgid ""
"require the user to install QGIS prior to installing your application. The "
"application installer should look for default locations of QGIS libraries "
"and allow the user to set the path if not found. This approach has the "
"advantage of being simpler, however it requires the user to do more steps."
msgstr "Imposer à l'utilisateur d'installer QGIS sur la plate-forme avant d'installer l'application. L'installateur de l'application devrait rechercher les emplacements par défaut des bibliothèques QGIS et permettre à l'utilisateur de préciser un chemin si ce dernier n'est pas trouvé. Cette approche a l'avantage d'être plus simple mais elle impose plus d'actions à l'utilisateur."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:333
msgid ""
"package QGIS together with your application. Releasing the application may "
"be more challenging and the package will be larger, but the user will be "
"saved from the burden of downloading and installing additional pieces of "
"software."
msgstr "Créer un paquet QGIS qui contiendra votre application. Publier l'application pourrait être plus complexe et le paquet d'installation sera plus volumineux mais l'utilisateur n'aura pas à télécharger et à installer d'autres logiciels."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:338
msgid ""
"The two deployment models can be mixed.  You can provide a standalone "
"applications on Windows and macOS, but for Linux leave the installation of "
"GIS up to the user and his package manager."
msgstr "Les deux modèles de déploiement peuvent être mélangés: déployer une application autonome sous Windows et MacOS, mais sous Linux laisser l'installation de QGIS à l'utilisateur via son gestionnaire de paquets ."

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:343
msgid "Technical notes on PyQt and SIP"
msgstr "Notes techniques sur PyQt et SIP"

#: ../../source/docs/pyqgis_developer_cookbook/intro.rst:345
msgid ""
"We've decided for Python as it's one of the most favoured languages for "
"scripting. PyQGIS bindings in QGIS 3 depend on SIP and PyQt5. The reason for"
" using SIP instead of the more widely used SWIG is that the QGIS code "
"depends on Qt libraries. Python bindings for Qt (PyQt) are done using SIP "
"and this allows seamless integration of PyQGIS with PyQt."
msgstr "Nous avons choisi Python car c'est un des langages les plus adaptés pour la création de scripts. Les liaisons (bindings) PyQGIS sur QGIS3 dépendent de SIP et PyQT5. Le choix de l'utilisation de SIP plutôt que de SWIG plus généralement répandu est dû au fait que le noyau de QGIS dépend des librairies Qt. Les liaisons Python pour Qt (PyQt) sont opérées via SIP, ce qui permet une intégration parfaite de PyQGIS avec PyQt. "

#~ msgid ""
#~ "This document is intended to work both as a tutorial and a reference guide. "
#~ "While it does not list all possible use cases, it should give a good "
#~ "overview of the principal functionality."
#~ msgstr ""

#~ msgid ""
#~ "Starting from 0.9 release, QGIS has optional scripting support using Python "
#~ "language. We've decided for Python as it's one of the most favourite "
#~ "languages for scripting. PyQGIS bindings depend on SIP and PyQt4. The reason"
#~ " for using SIP instead of more widely used SWIG is that the whole QGIS code "
#~ "depends on Qt libraries. Python bindings for Qt (PyQt) are done also using "
#~ "SIP and this allows seamless integration of PyQGIS with PyQt."
#~ msgstr ""

#~ msgid ""
#~ "There are several ways how to use Python bindings in QGIS desktop, they are "
#~ "covered in detail in the following sections:"
#~ msgstr ""

#~ msgid "automatically run Python code when QGIS starts"
#~ msgstr ""

#~ msgid "issue commands in Python console within QGIS"
#~ msgstr ""

#~ msgid "create and use plugins in Python"
#~ msgstr ""

#~ msgid "create custom applications based on QGIS API"
#~ msgstr ""

#~ msgid "Python bindings are also available for QGIS Server:"
#~ msgstr ""

#~ msgid ""
#~ "starting from 2.8 release, Python plugins are also available on QGIS Server "
#~ "(see :ref:`Server Python Plugins <server_plugins>`)"
#~ msgstr ""

#~ msgid ""
#~ "starting from 2.11 version (Master at 2015-08-11), QGIS Server library has "
#~ "Python bindings that can be used to embed QGIS Server into a Python "
#~ "application."
#~ msgstr ""

#~ msgid ""
#~ "There is a `complete QGIS API <http://qgis.org/api/>`_ reference that "
#~ "documents the classes from the QGIS libraries. Pythonic QGIS API is nearly "
#~ "identical to the API in C++."
#~ msgstr ""

#~ msgid ""
#~ "A good resource when dealing with plugins is to download some plugins from "
#~ "`plugin repository <http://plugins.qgis.org/>`_ and examine their code. "
#~ "Also, the ``python/plugins/`` folder in your QGIS installation contains some"
#~ " plugin that you can use to learn how to develop such plugin and how to "
#~ "perform some of the most common tasks."
#~ msgstr ""

#~ msgid "Run Python code when QGIS starts"
#~ msgstr ""

#~ msgid ""
#~ "You can run Python code just before QGIS initialization completes by setting"
#~ " the ``PYQGIS_STARTUP`` environment variable  to the path of an existing "
#~ "Python file."
#~ msgstr ""

#~ msgid ""
#~ "This method is something you will probably rarely need, but worth mentioning"
#~ " here because it is one of the several ways to run Python code within QGIS "
#~ "and because this code will run before QGIS initialization is complete. This "
#~ "method is very useful for cleaning sys.path, which may have undesireable "
#~ "paths, or for isolating/loading the initial environ without requiring a virt"
#~ " env, e.g. homebrew or MacPorts installs on Mac."
#~ msgstr ""

#~ msgid ""
#~ "Every time QGIS starts, the user's Python home directory (usually: "
#~ ":file:`.qgis2/python`) is searched for a file named :file:`startup.py`, if "
#~ "that file exists, it is executed by the embedded Python interpreter."
#~ msgstr ""

#~ msgid "Python Console"
#~ msgstr ""

#~ msgid ""
#~ "For scripting, it is possible to take advantage of integrated Python "
#~ "console. It can be opened from menu: :menuselection:`Plugins --> Python "
#~ "Console`. The console opens as a non-modal utility window:"
#~ msgstr ""

#~ msgid ""
#~ "The screenshot above illustrates how to get the layer currently selected in "
#~ "the layer list, show its ID and optionally, if it is a vector layer, show "
#~ "the feature count. For interaction with QGIS environment, there is a "
#~ ":data:`iface` variable, which is an instance of :class:`QgsInterface`. This "
#~ "interface allows access to the map canvas, menus, toolbars and other parts "
#~ "of the QGIS application."
#~ msgstr ""

#~ msgid ""
#~ "For convenience of the user, the following statements are executed when the "
#~ "console is started (in future it will be possible to set further initial "
#~ "commands)"
#~ msgstr ""

#~ msgid ""
#~ "For those which use the console often, it may be useful to set a shortcut "
#~ "for triggering the console (within menu :menuselection:`Settings --> "
#~ "Configure shortcuts...`)"
#~ msgstr ""

#~ msgid ""
#~ "QGIS allows enhancement of its functionality using plugins. This was "
#~ "originally possible only with C++ language. With the addition of Python "
#~ "support to QGIS, it is also possible to use plugins written in Python. The "
#~ "main advantage over C++ plugins is its simplicity of distribution (no "
#~ "compiling for each platform needed) and easier development."
#~ msgstr ""

#~ msgid ""
#~ "Many plugins covering various functionality have been written since the "
#~ "introduction of Python support. The plugin installer allows users to easily "
#~ "fetch, upgrade and remove Python plugins. See the `Python Plugin "
#~ "Repositories <http://www.qgis.org/wiki/Python_Plugin_Repositories>`_ page "
#~ "for various sources of plugins."
#~ msgstr ""

#~ msgid ""
#~ "Python plugins are also available in QGIS server (:ref:`label_qgisserver`), "
#~ "see :ref:`server_plugins` for further details."
#~ msgstr ""

#~ msgid ""
#~ "Often when processing some GIS data, it is handy to create some scripts for "
#~ "automating the process instead of doing the same task again and again. With "
#~ "PyQGIS, this is perfectly possible --- import the :mod:`qgis.core` module, "
#~ "initialize it and you are ready for the processing."
#~ msgstr ""

#~ msgid ""
#~ "Or you may want to create an interactive application that uses some GIS "
#~ "functionality --- measure some data, export a map in PDF or any other "
#~ "functionality. The :mod:`qgis.gui` module additionally brings various GUI "
#~ "components, most notably the map canvas widget that can be very easily "
#~ "incorporated into the application with support for zooming, panning and/or "
#~ "any further custom map tools."
#~ msgstr ""

#~ msgid ""
#~ "PyQGIS custom applications or standalone scripts must be configured to "
#~ "locate the QGIS resources such as projection information, providers for "
#~ "reading vector and raster layers, etc. QGIS Resources are initialized by "
#~ "adding a few lines to the beginning of your application or script. The code "
#~ "to initialize QGIS for custom applications and standalone scripts is "
#~ "similar, but examples of each are provided below."
#~ msgstr ""

#~ msgid ""
#~ "Note: do *not* use :file:`qgis.py` as a name for your test script --- Python"
#~ " will not be able to import the bindings as the script's name will shadow "
#~ "them."
#~ msgstr ""

#~ msgid ""
#~ "Now you can work with QGIS API --- load layers and do some processing or "
#~ "fire up a GUI with a map canvas. The possibilities are endless :-)"
#~ msgstr ""

#~ msgid ""
#~ "This can be fixed by setting the ``PYTHONPATH`` environment variable. In the"
#~ " following commands, ``qgispath`` should be replaced with your actual QGIS "
#~ "installation path:"
#~ msgstr ""

#~ msgid "on Linux: :command:`export PYTHONPATH=/qgispath/share/qgis/python`"
#~ msgstr ""

#~ msgid "on Windows: :command:`set PYTHONPATH=c:\\\\qgispath\\\\python`"
#~ msgstr ""

#~ msgid ""
#~ "The path to the PyQGIS modules is now known, however they depend on "
#~ "``qgis_core`` and ``qgis_gui`` libraries (the Python modules serve only as "
#~ "wrappers). Path to these libraries is typically unknown for the operating "
#~ "system, so you get an import error again (the message might vary depending "
#~ "on the system)::"
#~ msgstr ""

#~ msgid "on Linux: :command:`export LD_LIBRARY_PATH=/qgispath/lib`"
#~ msgstr ""

#~ msgid "on Windows: :command:`set PATH=C:\\\\qgispath;%PATH%`"
#~ msgstr ""

#~ msgid ""
#~ "require user to install QGIS on his platform prior to installing your "
#~ "application. The application installer should look for default locations of "
#~ "QGIS libraries and allow user to set the path if not found. This approach "
#~ "has the advantage of being simpler, however it requires user to do more "
#~ "steps."
#~ msgstr ""

#~ msgid ""
#~ "Python support was first introduced in QGIS 0.9. Today, there are several "
#~ "ways to use Python in QGIS Desktop, they are covered in the following "
#~ "sections:"
#~ msgstr ""

#~ msgid ""
#~ "The screenshot above illustrates how to get the layer currently selected in "
#~ "the layer list, show its ID and optionally, if it is a vector layer, show "
#~ "the feature count. For interaction with the QGIS environment, there is a "
#~ ":data:`iface` variable, which is an instance of :class:`QgisInterface "
#~ "<qgis.gui.QgisInterface>`. This interface allows access to the map canvas, "
#~ "menus, toolbars and other parts of the QGIS application."
#~ msgstr ""

#~ msgid ""
#~ "For those which use the console often, it may be useful to set a shortcut "
#~ "for triggering the console (within :menuselection:`Settings --> Configure "
#~ "shortcuts...`)"
#~ msgstr ""

#~ msgid ""
#~ "The functionality of QGIS can be extended using plugins. It is now also "
#~ "possible to use plugins written in Python. The main advantage over C++ "
#~ "plugins is simplicity of distribution (no compiling for each platform) and "
#~ "easier development."
#~ msgstr ""

#~ msgid ""
#~ "Python plugins are also available for QGIS server (:ref:`label_qgisserver`),"
#~ " see :ref:`server_plugins` for further details."
#~ msgstr ""

#~ msgid "Linux: :file:`.local/share/QGIS/QGIS3/profiles/default/python`"
#~ msgstr ""

#~ msgid "Windows: :file:`AppData\\\\Roaming\\\\QGIS\\\\QGIS3\\\\profiles\\\\default\\\\python`"
#~ msgstr ""

#~ msgid "macOS: :file:`Library/Application Support/QGIS/QGIS3/profiles/default`"
#~ msgstr ""

#~ msgid "PYQGIS_STARTUP environment variable"
#~ msgstr ""

#~ msgid ""
#~ "This code will run before QGIS initialization is complete. This method is "
#~ "very useful for cleaning sys.path, which may have undesireable paths, or for"
#~ " isolating/loading the initial environ without requiring a virtual "
#~ "environment, e.g. homebrew or MacPorts installs on Mac."
#~ msgstr ""

#~ msgid ""
#~ "Or you may want to create an interactive application that uses GIS "
#~ "functionality --- perform measurements, export a map as PDF, or any other "
#~ "functionality. The :mod:`qgis.gui` module brings various GUI components, "
#~ "most notably the map canvas widget that can be incorporated into the "
#~ "application with support for zooming, panning and/or any further custom map "
#~ "tools."
#~ msgstr ""

#~ msgid ""
#~ "PyQGIS custom applications or standalone scripts must be configured to "
#~ "locate the QGIS resources such as projection information, providers for "
#~ "reading vector and raster layers, etc. QGIS Resources are initialized by "
#~ "adding a few lines to the beginning of your application or script. The code "
#~ "to initialize QGIS for custom applications and standalone scripts is "
#~ "similar. Examples of each are provided below."
#~ msgstr ""

#~ msgid ""
#~ "Do *not* use :file:`qgis.py` as a name for your test script Python will not "
#~ "be able to import the bindings as the script's name will shadow them."
#~ msgstr ""

#~ msgid ""
#~ "To start a standalone script, initialize the QGIS resources at the beginning"
#~ " of the script similar to the following code:"
#~ msgstr ""

#~ msgid ""
#~ "We begin by importing the :mod:`qgis.core` module and then configuring the "
#~ "prefix path. The prefix path is the location where QGIS is installed on your"
#~ " system. It is configured in the script by calling the ``setPrefixPath`` "
#~ "method. The second argument of ``setPrefixPath`` is set to :const:`True`, "
#~ "which controls whether the default paths are used."
#~ msgstr ""

#~ msgid ""
#~ "The QGIS install path varies by platform; the easiest way to find it for "
#~ "your your system is to use the :ref:`pythonconsole` from within QGIS and "
#~ "look at the output from running ``QgsApplication.prefixPath()``."
#~ msgstr ""

#~ msgid ""
#~ "After the prefix path is configured, we save a reference to "
#~ "``QgsApplication`` in the variable ``qgs``. The second argument is set to "
#~ "``False``, which indicates that we do not plan to use the GUI since we are "
#~ "writing a standalone script. With the ``QgsApplication`` configured, we load"
#~ " the QGIS data providers and layer registry by calling the "
#~ "``qgs.initQgis()`` method. With QGIS initialized, we are ready to write the "
#~ "rest of the script. Finally, we wrap up by calling ``qgs.exitQgis()`` to "
#~ "remove the data providers and layer registry from memory."
#~ msgstr ""

#~ msgid ""
#~ "The only difference between :ref:`standalonescript` and a custom PyQGIS "
#~ "application is the second argument when instantiating the "
#~ "``QgsApplication``. Pass :const:`True` instead of ``False`` to indicate that"
#~ " we plan to use a GUI."
#~ msgstr ""

#~ msgid ""
#~ "Now you can work with the QGIS API --- load layers and do some processing or"
#~ " fire up a GUI with a map canvas. The possibilities are endless :-)"
#~ msgstr ""

#~ msgid ""
#~ "You will need to tell your system where to search for QGIS libraries and "
#~ "appropriate Python modules if they are not in a well-known location --- "
#~ "otherwise Python will complain::"
#~ msgstr ""

#~ msgid ""
#~ "The path to the PyQGIS modules is now known, however they depend on the "
#~ "``qgis_core`` and ``qgis_gui`` libraries (the Python modules serve only as "
#~ "wrappers). The path to these libraries is typically unknown to the operating"
#~ " system, so you get an import error again (the message might vary depending "
#~ "on the system)::"
#~ msgstr ""

#~ msgid ""
#~ "Fix this by adding the directories where the QGIS libraries reside to search"
#~ " path of the dynamic linker:"
#~ msgstr ""

#~ msgid ""
#~ "require the user to install QGIS on his platform prior to installing your "
#~ "application. The application installer should look for default locations of "
#~ "QGIS libraries and allow user to set the path if not found. This approach "
#~ "has the advantage of being simpler, however it requires the user to do more "
#~ "steps."
#~ msgstr ""

#~ msgid ""
#~ "The two deployment models can be mixed - deploy standalone application on "
#~ "Windows and macOS, for Linux leave the installation of QGIS up to user and "
#~ "his package manager."
#~ msgstr ""

#~ msgid ""
#~ "We've decided for Python as it's one of the most favoured languages for "
#~ "scripting. PyQGIS bindings in QGIS 3 depend on SIP and PyQt5. The reason for"
#~ " using SIP instead of more widely used SWIG is that the QGIS code depends on"
#~ " Qt libraries. Python bindings for Qt (PyQt) are also done using SIP and "
#~ "this allows seamless integration of PyQGIS with PyQt."
#~ msgstr ""

#~ msgid ""
#~ "There is a `complete QGIS API <https://qgis.org/api/>`_ reference that "
#~ "documents the classes from the QGIS libraries. `The Pythonic QGIS API "
#~ "(pyqgis) <https://qgis.org/pyqgis>`_ is nearly identical to the C++ API."
#~ msgstr ""
