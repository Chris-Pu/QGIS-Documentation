# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGISDoc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGISDoc 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-14 23:00+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:5
msgid "Introduction"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:7
msgid ""
"This document is intended to be both a tutorial and a reference guide. "
"While it does not list all possible use cases, it should give a good "
"overview of the principal functionality."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:14
msgid ""
"Python support was first introduced in QGIS 0.9. There are several ways "
"to use Python in QGIS Desktop (covered in the following sections):"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:18
msgid "Issue commands in the Python console within QGIS"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:19
msgid "Create and use plugins"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:20
msgid "Automatically run Python code when QGIS starts"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:21
msgid "Create custom applications based on the QGIS API"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:23
msgid ""
"Python bindings are also available for QGIS Server, including Python "
"plugins (see :ref:`server_plugins`) and Python bindings that can be used "
"to embed QGIS Server into a Python application."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:30
msgid ""
"There is a :api:`complete QGIS API <>` reference that documents the "
"classes from the QGIS libraries. :pyqgis:`The Pythonic QGIS API (pyqgis) "
"<>` is nearly identical to the C++ API."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:34
msgid ""
"A good resource for learning how to perform common tasks is to download "
"existing plugins from the `plugin repository "
"<https://plugins.qgis.org/>`_ and examine their code."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:45
msgid "Scripting in the Python Console"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:47
msgid ""
"QGIS provides an integrated :ref:`Python console <console>` for "
"scripting. It can be opened from the :menuselection:`Plugins --> Python "
"Console` menu:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:54
msgid "QGIS Python console"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:56
msgid ""
"The screenshot above illustrates how to get the layer currently selected "
"in the layer list, show its ID and optionally, if it is a vector layer, "
"show the feature count. For interaction with the QGIS environment, there "
"is an :data:`iface` variable, which is an instance of "
":class:`QgisInterface <qgis.gui.QgisInterface>`. This interface allows "
"access to the map canvas, menus, toolbars and other parts of the QGIS "
"application."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:65
msgid ""
"For user convenience, the following statements are executed when the "
"console is started (in the future it will be possible to set further "
"initial commands)"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:74
msgid ""
"For those which use the console often, it may be useful to set a shortcut"
" for triggering the console (within :menuselection:`Settings --> Keyboard"
" shortcuts...`)"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:81
msgid "Python Plugins"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:83
msgid ""
"The functionality of QGIS can be extended using plugins. Plugins can be "
"written in Python. The main advantage over C++ plugins is simplicity of "
"distribution (no compiling for each platform) and easier development."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:89
msgid ""
"Many plugins covering various functionality have been written since the "
"introduction of Python support. The plugin installer allows users to "
"easily fetch, upgrade and remove Python plugins. See the `Python Plugins "
"<https://plugins.qgis.org/>`_ page for more information about plugins and"
" plugin development."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:95
msgid ""
"Creating plugins in Python is simple, see :ref:`developing_plugins` for "
"detailed instructions."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:100
msgid ""
"Python plugins are also available for QGIS server. See "
":ref:`server_plugins` for further details."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:108
msgid "Running Python code when QGIS starts"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:110
msgid "There are two distinct methods to run Python code every time QGIS starts."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:113
msgid "Creating a startup.py script"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:115
msgid ""
"Setting the ``PYQGIS_STARTUP`` environment variable to an existing Python"
" file"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:120
msgid "The :file:`startup.py` file"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:122
msgid "Every time QGIS starts, the user's Python home directory"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:124
msgid "Linux: :file:`.local/share/QGIS/QGIS3`"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:125
msgid "Windows: :file:`AppData\\\\Roaming\\\\QGIS\\\\QGIS3`"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:126
msgid "macOS: :file:`Library/Application Support/QGIS/QGIS3`"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:128
msgid ""
"is searched for a file named :file:`startup.py`. If that file exists, it "
"is executed by the embedded Python interpreter."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:131
msgid ""
"The default path depends on the operating system. To find the path that "
"will work for you, open the Python Console and run "
"``QStandardPaths.standardLocations(QStandardPaths.AppDataLocation)`` to "
"see the list of default directories."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:140
msgid "The PYQGIS_STARTUP environment variable"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:142
msgid ""
"You can run Python code just before QGIS initialization completes by "
"setting the ``PYQGIS_STARTUP`` environment variable to the path of an "
"existing Python file."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:146
msgid ""
"This code will run before QGIS initialization is complete. This method is"
" very useful for cleaning sys.path, which may have undesireable paths, or"
" for isolating/loading the initial environment without requiring a "
"virtual environment, e.g. homebrew or MacPorts installs on Mac."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:159
msgid "Python Applications"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:161
msgid ""
"It is often handy to create  scripts for automating processes. With "
"PyQGIS, this is perfectly possible --- import the :mod:`qgis.core` "
"module, initialize it and you are ready for the processing."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:166
msgid ""
"Or you may want to create an interactive application that uses GIS "
"functionality --- perform measurements, export a map as PDF, ... The "
":mod:`qgis.gui` module provides various GUI components, most notably the "
"map canvas widget that can be incorporated into the application with "
"support for zooming, panning and/or any further custom map tools."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:173
msgid ""
"PyQGIS custom applications or standalone scripts must be configured to "
"locate the QGIS resources, such as projection information and providers "
"for reading vector and raster layers. QGIS Resources are initialized by "
"adding a few lines to the beginning of your application or script. The "
"code to initialize QGIS for custom applications and standalone scripts is"
" similar. Examples of each are provided below."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:183
msgid ""
"Do *not* use :file:`qgis.py` as a name for your script. Python will not "
"be able to import the bindings as the script's name will shadow them."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:190
msgid "Using PyQGIS in standalone scripts"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:192
msgid ""
"To start a standalone script, initialize the QGIS resources at the "
"beginning of the script:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:217
msgid ""
"First we import the :mod:`qgis.core` module and configure the prefix "
"path. The prefix path is the location where QGIS is installed on your "
"system. It is configured in the script by calling the "
":meth:`setPrefixPath <qgis.core.QgsApplication.setPrefixPath>` method. "
"The second argument of :meth:`setPrefixPath "
"<qgis.core.QgsApplication.setPrefixPath>` is set to ``True``, specifying "
"that default paths are to be used."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:226
msgid ""
"The QGIS install path varies by platform; the easiest way to find it for "
"your system is to use the :ref:`pythonconsole` from within QGIS and look "
"at the output from running ``QgsApplication.prefixPath()``."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:231
msgid ""
"After the prefix path is configured, we save a reference to "
"``QgsApplication`` in the variable ``qgs``. The second argument is set to"
" ``False``, specifying that we do not plan to use the GUI since we are "
"writing a standalone script. With ``QgsApplication`` configured, we load "
"the QGIS data providers and layer registry by calling the "
"``qgs.initQgis()`` method. With QGIS initialized, we are ready to write "
"the rest of the script. Finally, we wrap up by calling ``qgs.exitQgis()``"
" to remove the data providers and layer registry from memory."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:243
msgid "Using PyQGIS in custom applications"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:245
msgid ""
"The only difference between :ref:`standalonescript` and a custom PyQGIS "
"application is the second argument when instantiating the "
"``QgsApplication``. Pass ``True`` instead of ``False`` to indicate that "
"we plan to use a GUI."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:274
msgid ""
"Now you can work with the QGIS API - load layers and do some processing "
"or fire up a GUI with a map canvas. The possibilities are endless :-)"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:282
msgid "Running Custom Applications"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:284
msgid ""
"You need to tell your system where to search for QGIS libraries and "
"appropriate Python modules if they are not in a well-known location - "
"otherwise Python will complain::"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:291
msgid ""
"This can be fixed by setting the ``PYTHONPATH`` environment variable. In "
"the following commands, ``<qgispath>`` should be replaced with your "
"actual QGIS installation path:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:295
msgid "on Linux: :command:`export PYTHONPATH=/<qgispath>/share/qgis/python`"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:296
msgid "on Windows: :command:`set PYTHONPATH=c:\\\\<qgispath>\\\\python`"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:297
msgid ""
"on macOS: :command:`export "
"PYTHONPATH=/<qgispath>/Contents/Resources/python`"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:299
msgid ""
"Now, the path to the PyQGIS modules is known, but they depend on the "
"``qgis_core`` and ``qgis_gui`` libraries (the Python modules serve only "
"as wrappers). The path to these libraries may be unknown to the operating"
" system, and then you will get an import error again (the message might "
"vary depending on the system)::"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:309
msgid ""
"Fix this by adding the directories where the QGIS libraries reside to the"
" search path of the dynamic linker:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:312
msgid "on Linux: :command:`export LD_LIBRARY_PATH=/<qgispath>/lib`"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:313
msgid ""
"on Windows: :command:`set "
"PATH=C:\\\\<qgispath>\\\\bin;C:\\\\<qgispath>\\\\apps\\\\<qgisrelease>\\\\bin;%PATH%`"
" where ``<qgisrelease>`` should be replaced with the type of release you "
"are targeting (eg, ``qgis-ltr``, ``qgis``, ``qgis-dev``)"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:317
msgid ""
"These commands can be put into a bootstrap script that will take care of "
"the startup. When deploying custom applications using PyQGIS, there are "
"usually two possibilities:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:321
msgid ""
"require the user to install QGIS prior to installing your application. "
"The application installer should look for default locations of QGIS "
"libraries and allow the user to set the path if not found. This approach "
"has the advantage of being simpler, however it requires the user to do "
"more steps."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:327
msgid ""
"package QGIS together with your application. Releasing the application "
"may be more challenging and the package will be larger, but the user will"
" be saved from the burden of downloading and installing additional pieces"
" of software."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:332
msgid ""
"The two deployment models can be mixed.  You can provide a standalone "
"applications on Windows and macOS, but for Linux leave the installation "
"of GIS up to the user and his package manager."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:337
msgid "Technical notes on PyQt and SIP"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/intro.rst:339
msgid ""
"We've decided for Python as it's one of the most favoured languages for "
"scripting. PyQGIS bindings in QGIS 3 depend on SIP and PyQt5. The reason "
"for using SIP instead of the more widely used SWIG is that the QGIS code "
"depends on Qt libraries. Python bindings for Qt (PyQt) are done using SIP"
" and this allows seamless integration of PyQGIS with PyQt."
msgstr ""

