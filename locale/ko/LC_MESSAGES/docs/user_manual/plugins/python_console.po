# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
# 
# Translators:
# Kwon.Yongchan <ruvyn@naver.com>, 2017
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project testing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-06 11:48+0100\n"
"PO-Revision-Date: 2017-08-09 06:53+0000\n"
"Last-Translator: Kwon.Yongchan <ruvyn@naver.com>, 2017\n"
"Language-Team: Korean (https://www.transifex.com/qgis/teams/6144/ko/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"
"Language: ko\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/docs/user_manual/plugins/python_console.rst:14
msgid "QGIS Python console"
msgstr "QGIS 파이썬 콘솔"

#: ../../source/docs/user_manual/plugins/python_console.rst:21
msgid ""
"As you will see later in this chapter, QGIS has been designed with a plugin "
"architecture. Plugins can be written in Python, a very famous language in "
"the geospatial world."
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:25
msgid ""
"QGIS brings a Python API (see :ref:`PyQGIS Developer Cookbook <PyQGIS-"
"Developer-Cookbook>` for some code sample) to let the user interact with its"
" objects (layers, feature or interface). QGIS also has a Python console."
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:29
msgid ""
"The QGIS Python Console is an interactive shell for the python command "
"executions. It also has a python file editor that allows you to edit and "
"save your python scripts. Both console and editor are based on PyQScintilla2"
" package. To open the console go to :menuselection:`Plugins --> Python "
"Console` (:kbd:`Ctrl+Alt+P`)."
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:36
msgid "The Interactive Console"
msgstr "쌍방향 콘솔"

#: ../../source/docs/user_manual/plugins/python_console.rst:38
msgid ""
"The interactive console is composed of a toolbar, an input area and an "
"output one."
msgstr "쌍방향 콘솔은 툴바, 입력 영역 그리고 출력 영역으로 이루어져 있습니다."

#: ../../source/docs/user_manual/plugins/python_console.rst:41
msgid "Toolbar"
msgstr "툴바"

#: ../../source/docs/user_manual/plugins/python_console.rst:43
msgid "The toolbar proposes the following tools:"
msgstr "툴바는 다음 도구들을 제공합니다:"

#: ../../source/docs/user_manual/plugins/python_console.rst:45
msgid "|clearConsole| :sup:`Clear Console` to wipe the output area;"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:46
msgid ""
"|runConsole| :sup:`Run Command` available in the input area: same as "
"pressing :kbd:`Enter`;"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:48
msgid ""
"|showEditorConsole| :sup:`Show Editor`: toggles :ref:`console_editor` "
"visibility;"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:50
msgid ""
"|options| :sup:`Options...`: opens a dialog to configure console properties "
"(see :ref:`console_options`);"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:52
msgid "|helpContents| :sup:`Help...`: browses the current documentation."
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:56
msgid "Console"
msgstr "콘솔"

#: ../../source/docs/user_manual/plugins/python_console.rst:58
msgid "The console main features are:"
msgstr "콘솔의 주요 기능은 다음과 같습니다:"

#: ../../source/docs/user_manual/plugins/python_console.rst:60
#: ../../source/docs/user_manual/plugins/python_console.rst:109
msgid ""
"Code completion, highlighting syntax and calltips for the following APIs:"
msgstr "다음 API들을 위한 코드 완성, 문법 구문 강조, 그리고 팝업 도움말:"

#: ../../source/docs/user_manual/plugins/python_console.rst:62
#: ../../source/docs/user_manual/plugins/python_console.rst:111
msgid "Python"
msgstr "파이썬"

#: ../../source/docs/user_manual/plugins/python_console.rst:63
#: ../../source/docs/user_manual/plugins/python_console.rst:112
msgid "PyQGIS"
msgstr "PyQGIS"

#: ../../source/docs/user_manual/plugins/python_console.rst:64
#: ../../source/docs/user_manual/plugins/python_console.rst:113
msgid "PyQt5"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:65
#: ../../source/docs/user_manual/plugins/python_console.rst:114
msgid "QScintilla2"
msgstr "QScintilla2"

#: ../../source/docs/user_manual/plugins/python_console.rst:66
#: ../../source/docs/user_manual/plugins/python_console.rst:115
msgid "osgeo-gdal-ogr"
msgstr "osgeo-gdal-ogr"

#: ../../source/docs/user_manual/plugins/python_console.rst:68
msgid ""
":kbd:`Ctrl+Alt+Space` to view the auto-completion list if enabled in the "
":ref:`console_options`;"
msgstr ""
":kbd:`Ctrl+Alt+Space`: :ref:`console_options` 에서 활성화하면 사용할 수 있는 자동 완성 목록 보기"

#: ../../source/docs/user_manual/plugins/python_console.rst:70
msgid ""
"Execute code snippets from the input area by typing and pressing "
":kbd:`Enter` or :guilabel:`Run Command`;"
msgstr ""
"입력 영역에서 :kbd:`Enter` 키를 누르거나 |iconRunConsole| 아이콘을 클릭해서 코드 조각(snippet) 실행하기"

#: ../../source/docs/user_manual/plugins/python_console.rst:72
msgid ""
"Execute code snippets from the output area using the :guilabel:`Enter "
"Selected` from the contextual menu or pressing :kbd:`Ctrl+E`;"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:74
msgid ""
"Browse the command history from the input area using the :kbd:`Up` and "
":kbd:`Down` arrow keys and execute the command you want;"
msgstr "입력 영역에서 :kbd:`Up` 및 :kbd:`Down` 방향키를 눌러 명령어 이력을 탐색하고 원하는 명령어 실행하기"

#: ../../source/docs/user_manual/plugins/python_console.rst:76
msgid ""
":kbd:`Ctrl+Shift+Space` to view the command history: double-clicking a row "
"will execute the command. The :guilabel:`Command History` dialog can also be"
" accessed from context menu of input area;"
msgstr ""
":kbd:`Ctrl+Shift+Space` 조합키로 명령어 이력 살펴보기: 어느 행을 더블클릭하면 해당 명령어를 실행합니다. 입력 "
"영역에서 컨텍스트 메뉴를 통해 :guilabel:`Command History` 대화창을 열 수도 있습니다."

#: ../../source/docs/user_manual/plugins/python_console.rst:79
msgid ""
"Save and clear the command history. The history will be saved into the file "
":file:`~/.qgis2/console_history.txt`;"
msgstr ""
"명령어 이력 저장 및 삭제: 명령어 이력은 :file:`~/.qgis2/console_history.txt` 파일로 저장됩니다."

#: ../../source/docs/user_manual/plugins/python_console.rst:81
msgid "Open :api:`QGIS C++ API <>` documentation by typing ``_api``;"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:82
msgid "Open :pyqgis:`QGIS Python API <>` documentation by typing ``_pyqgis``."
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:83
msgid ""
"Open :ref:`PyQGIS Cookbook <PyQGIS-Developer-Cookbook>` by typing "
"``_cookbook``."
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:86
msgid "**Reuse executed commands from the output panel**"
msgstr "**출력 패널에서 실행한 명령어 재사용**"

#: ../../source/docs/user_manual/plugins/python_console.rst:88
msgid ""
"You can execute code snippets from the output panel by selecting some text "
"and pressing :kbd:`Ctrl+E`. No matter if selected text contains the "
"interpreter prompt (``>>>``, ``...``)."
msgstr ""
"출력 패널에서 일부 텍스트를 선택한 다음 :kbd:`Ctrl+E` 조합키를 누르면 코드 조각을 실행할 수 있습니다. 선택한 텍스트가 "
"인터프리터 프롬프트(``>>>``, ``...``)를 담고 있어도 상관없습니다."

#: ../../source/docs/user_manual/plugins/python_console.rst:97
msgid "The Python Console"
msgstr "파이썬 콘솔"

#: ../../source/docs/user_manual/plugins/python_console.rst:102
msgid "The Code Editor"
msgstr "코드 편집기"

#: ../../source/docs/user_manual/plugins/python_console.rst:104
msgid ""
"Use the |showEditorConsole| :sup:`Show Editor` button to enable the editor "
"widget. It allows editing and saving Python files and offers advanced "
"functionalities to manage your code (comment and uncomment code, check "
"syntax, share the code via codepad.org and much more). Main features are:"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:117
msgid ":kbd:`Ctrl+Space` to view the auto-completion list."
msgstr ":kbd:`Ctrl+Space`: 자동 완성 목록 보기"

#: ../../source/docs/user_manual/plugins/python_console.rst:118
msgid "Sharing code snippets via codepad.org."
msgstr "http://codepad.org/ 를 통해 코드 조각 공유하기"

#: ../../source/docs/user_manual/plugins/python_console.rst:119
msgid ":kbd:`Ctrl+4` Syntax check."
msgstr ":kbd:`Ctrl+4`: 문법 확인하기"

#: ../../source/docs/user_manual/plugins/python_console.rst:120
msgid ""
"Search bar (open it with the default Desktop Environment shortcut, usually "
":kbd:`Ctrl+F`):"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:123
msgid ""
"Use the default Desktop Environment shortcut to find next/previous "
"(:kbd:`Ctrl+G` and :kbd:`Shift+Ctrl+G`);"
msgstr "데스크탑 환경 기본 단축키(:kbd:`Ctrl+G` 및 :kbd:`Shift+Ctrl+G`)를 사용해서 다음/이전 찾기"

#: ../../source/docs/user_manual/plugins/python_console.rst:125
msgid "Automatically find first match when typing in find box;"
msgstr "검색창 입력 시 첫 번째 일치 항목을 자동으로 찾기"

#: ../../source/docs/user_manual/plugins/python_console.rst:126
msgid "Set initial find string to selection when opening find;"
msgstr "검색창을 열 때 처음 찾은 문자열을 선택하도록 설정하기"

#: ../../source/docs/user_manual/plugins/python_console.rst:127
msgid "Pressing :kbd:`Esc` closes the find bar."
msgstr ":kbd:`Esc` 키를 눌러 검색창 닫기"

#: ../../source/docs/user_manual/plugins/python_console.rst:129
msgid "Object inspector: a class and function browser;"
msgstr "객체 조사기: 클래스 및 함수 탐색기"

#: ../../source/docs/user_manual/plugins/python_console.rst:130
msgid "Go to an object definition with a mouse click (from Object inspector);"
msgstr "마우스 클릭으로 객체 정의로 가기 (객체 조사기에서)"

#: ../../source/docs/user_manual/plugins/python_console.rst:131
msgid ""
"Execute code snippets with the |runConsole| :guilabel:`Run Selected` command"
" in contextual menu;"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:133
msgid ""
"Execute the whole script with the |start| :guilabel:`Run Script` command "
"(this creates a byte-compiled file with the extension :file:`.pyc`)."
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:138
msgid ""
"Running partially or totally a script from the :guilabel:`Code Editor` "
"outputs the result in the Console output area."
msgstr "코드 편집기에서 스크립트 일부 또는 전체를 실행하면 콘솔의 출력 영역에 결과를 산출합니다."

#: ../../source/docs/user_manual/plugins/python_console.rst:146
msgid "The Python Console editor"
msgstr "파이썬 콘솔 편집기"

#: ../../source/docs/user_manual/plugins/python_console.rst:151
msgid "Options"
msgstr "옵션"

#: ../../source/docs/user_manual/plugins/python_console.rst:153
msgid ""
"Accessible from the Console toolbar and the contextual menus of the Console "
"output panel and the Code Editor, the :guilabel:`Python Console Settings` "
"help manage and control the Python console behavior."
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:157
msgid "For both :guilabel:`Console` and :guilabel:`Editor` you can specify:"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:159
msgid ""
":guilabel:`Autocompletion`: Enables code completion. You can get "
"autocompletion from the current document, the installed API files or both."
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:162
msgid ""
":guilabel:`Autocompletion threshold`: Sets the threshold for displaying the "
"autocompletion list (in characters)"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:165
msgid ":guilabel:`Typing`"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:167
msgid ""
":guilabel:`Automatic parentheses insertion`: Enables autoclosing for "
"parentheses"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:170
msgid ""
":guilabel:`Automatic insertion of the 'import' string on 'from xxx'`: "
"Enables insertion of 'import' when specifying imports"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:173
msgid "For :guilabel:`Editor` you can also specify:"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:175
msgid ":guilabel:`Run and Debug`"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:177
msgid ""
":guilabel:`Enable Object Inspector (switching between tabs may be slow)`: "
"Enable the object inspector."
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:180
msgid ""
":guilabel:`Auto-save script before running`: Saves the script automatically "
"when executed. This action will store a temporary file (in the temporary "
"system directory) that will be deleted automatically after running."
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:184
msgid ""
":guilabel:`Font and Colors`: Here you can specify the font to use in the "
"editor and the colors to use for highlighting"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:187
msgid "For :guilabel:`APIs` you can specify:"
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:189
msgid ""
":guilabel:`Using preloaded APIs file`: You can choose if you would like to "
"use the preloaded API files.  If this is not checked you can add API files "
"and you can also choose if you would like to use prepared API files (see "
"next option)."
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:193
msgid ""
":guilabel:`Using prepared APIs file`: If checked, the chosen ``*.pap`` file "
"will be used for code completion. To generate a prepared API file you have "
"to load at least one ``*.api`` file and then compile it by clicking the "
":guilabel:`Compile APIs...` button."
msgstr ""

#: ../../source/docs/user_manual/plugins/python_console.rst:198
msgid "**Save the options**"
msgstr "**옵션 저장하기**"

#: ../../source/docs/user_manual/plugins/python_console.rst:200
msgid ""
"To save the state of console's widgets you have to close the Python Console "
"from the close button. This allows you to save the geometry to be restored "
"to the next start."
msgstr ""
"콘솔 위젯 상태를 저장하려면, 닫기 버튼을 사용해서 파이썬 콘솔을 종료해야 합니다. 이렇게 하면 다음 시작 시 도형이 복구되도록 저장할 "
"수 있습니다."

#~ msgid "|updatedisclaimer|"
#~ msgstr ""

#~ msgid "|iconClearConsole| :guilabel:`Clear console` to wipe the output area;"
#~ msgstr "|iconClearConsole| :guilabel:`Clear console`: 출력 영역을 지웁니다."

#~ msgid ""
#~ "|iconClassConsole| :guilabel:`Import class`: **Processing**, "
#~ "**PyQt4.QtCore** or **PyQt4.QtGui** class;"
#~ msgstr ""
#~ "|iconClassConsole| :guilabel:`Import class`: **Processing**, "
#~ "**PyQt4.QtCore** 또는 **PyQt4.QtGui** 클래스를 가져옵니다."

#~ msgid ""
#~ "|iconRunConsole| :guilabel:`Run command` available in the input area: same "
#~ "as pressing :kbd:`Enter`;"
#~ msgstr ""
#~ "|iconRunConsole| :guilabel:`Run command`: 입력 영역에서 사용할 수 있습니다. :kbd:`Enter` "
#~ "키를 누르는 것과 동일한 기능입니다."

#~ msgid ""
#~ "|iconeShowEditorConsole| :guilabel:`Show editor`: toggles "
#~ ":ref:`console_editor` visibility;"
#~ msgstr ""
#~ "|iconeShowEditorConsole| :guilabel:`Show editor`: :ref:`console_editor` 를 켜고"
#~ " 끕니다."

#~ msgid "|iconSettingsConsole| :guilabel:`Options...`;"
#~ msgstr "|iconSettingsConsole| :guilabel:`Options...`"

#~ msgid "|iconHelpConsole| :guilabel:`Help...`."
#~ msgstr "|iconHelpConsole| :guilabel:`Help...`"

#~ msgid "PyQt4"
#~ msgstr "PyQt4"

#~ msgid ""
#~ "Execute code snippets from the output area using the :guilabel:`Enter "
#~ "selected` from the contextual menu or pressing :kbd:`Ctrl+E`;"
#~ msgstr ""
#~ "출력 영역에서 컨텍스트 메뉴의 :menuselection:`Enter selected` 를 선택하거나 :kbd:`Ctrl+E` 조합키를 "
#~ "눌러 코드 조각 실행하기"

#~ msgid ""
#~ "Open `QGIS API <http://qgis.org/api>`_ documentation by typing ``_api``;"
#~ msgstr ""

#~ msgid ""
#~ "Open :ref:`PyQGIS Cookbook <PyQGIS-Developer-Cookbook>` by typing "
#~ "``_pyqgis``."
#~ msgstr ""

#~ msgid ""
#~ "Use the |iconeShowEditorConsole| :sup:`Show editor` button to enable the "
#~ "editor widget. It allows editing and saving Python files and offers advanced"
#~ " functionalities to manage your code (comment and uncomment code, check "
#~ "syntax, share the code via codepad.org and much more). Main features are:"
#~ msgstr ""
#~ "편집기 위젯을 활성화하려면 |iconeShowEditorConsole| :sup:`Show editor` 아이콘 버튼을 클릭하십시오. "
#~ "편집기는 파이썬 파일을 편집하고 저장할 수 있으며, 사용자 코드를 관리하기 위한 고급 기능들(코드 주석 추가 및 삭제, 문법 확인, "
#~ "http://codepad.org/ 를 통해 코드 공유 등등)을 제공합니다. 주요 기능은 다음과 같습니다:"

#~ msgid ""
#~ "Search bar (open it with the default Desktop Environment shorcut, usually "
#~ ":kbd:`Ctrl+F`):"
#~ msgstr ""

#~ msgid "Execute code snippets with the :guilabel:`Enter selected` command;"
#~ msgstr "컨텍스트 메뉴의 :menuselection:`Enter selected` 를 선택해서 코드 조각 실행하기"

#~ msgid ""
#~ "Execute the whole script with the :guilabel:`Run script` command (this "
#~ "creates a byte-compiled file with the extension :file:`.pyc`)."
#~ msgstr ""
#~ "컨텍스트 메뉴의 :menuselection:`Run script` 를 선택해서 전체 스크립트를 실행하기 (이렇게 하면 "
#~ ":file:`.pyc` 확장자를 가진 `바이트코드 "
#~ "<https://ko.wikipedia.org/wiki/%EB%B0%94%EC%9D%B4%ED%8A%B8%EC%BD%94%EB%93%9C>`_"
#~ " 파일을 컴파일합니다.)"

#~ msgid ""
#~ "Accessible either from the Console toolbar or the contextual menu of Console"
#~ " output panel or Code Editor, this adds further settings to manage and "
#~ "control the Python console behavior:"
#~ msgstr ""
#~ "콘솔의 출력 영역 또는 코드 편집기의 컨텍스트 메뉴, 또는 콘솔 툴바를 통해 옵션 대화창을 열 수 있습니다. 옵션 대화창에서 파이썬 "
#~ "콘솔의 습성을 관리하고 제어할 수 있는 심화 설정을 할 수 있습니다:"

#~ msgid ""
#~ "**Autocompletion:** If checked the code completion is enabled. You can get "
#~ "autocompletion from current document, from installed APIs and both from APIs"
#~ " and current document."
#~ msgstr ""
#~ "|unchecked| :guilabel:`Autocompletion`: 이 옵션을 체크하면 자동 완성이 활성화됩니다. 현재 문서 또는 "
#~ "설치된 API에서 자동 완성을 가져오거나 API와 현재 문서 둘 다에서 자동 완성을 가져올 수도 있습니다."

#~ msgid ""
#~ "**Autocompletion threshold:** Sets the threshold to display the "
#~ "autocompletion list (in chars typed)."
#~ msgstr ""
#~ ":guilabel:`Autocompletion threshold`: 자동 완성 목록을 표시할 한계값(입력한 문자 개수)을 설정합니다."

#~ msgid ""
#~ "**Automatic parentheses insertion:** If checked enables the autoclosing for "
#~ "bracket."
#~ msgstr ""
#~ "|unchecked| :guilabel:`Automatic parentheses insertion`: 이 옵션을 체크하면 괄호를 "
#~ "자동적으로 닫습니다."

#~ msgid ""
#~ "**Auto-save script before running:** Allows you to save automatically the "
#~ "script to be executed in order to avoid to save it after any modification. "
#~ "This action will store a temporary file into the temporary system directory "
#~ "that will be automatically deleted after running."
#~ msgstr ""
#~ "|checkbox| :guilabel:`Auto-save script before running`: 어떤 수정 작업 후에 저장하는 일을 "
#~ "피하기 위해 실행할 스크립트를 자동적으로 저장할 수 있도록 해주는 옵션입니다. 시스템의 임시 디렉터리에 임시 파일을 저장하고, 실행 후에"
#~ " 자동적으로 삭제할 것입니다."

#~ msgid ""
#~ "**Using preloaded APIs file:** You can choose whether use the preload APIs "
#~ "file or load some APIs files saved on your system."
#~ msgstr ""
#~ "|unchecked| :guilabel:`Using preloaded APIs file`: 미리 불러온 API 파일을 사용할지 또는 "
#~ "사용자 시스템 상에 저장된 API 파일을 불러올지를 선택할 수 있습니다."

#~ msgid ""
#~ "**Using prepared APIs file:** If checked the ``*.pap`` file will be used for"
#~ " code completion. To generate a prepared APIs file you have to load at least"
#~ " an ``*.api`` file and then compile it by clicking on **[Compile Apis...]** "
#~ "button."
#~ msgstr ""
#~ "|unchecked| :guilabel:`Using prepared APIs file`: 이 옵션을 체크하면 코드 자동 완성을 위해 "
#~ ":file:`*.pap` 파일을 사용할 것입니다. 미리 준비된 API 파일을 생성하려면, 적어도 하나의 :file:`*.api` 파일을 "
#~ "불러온 다음 **[Compile Apis...]** 버튼을 눌러 컴파일해야 합니다."

#~ msgid ""
#~ "Open `QGIS C++ API <https://qgis.org/api>`_ documentation by typing "
#~ "``_api``;"
#~ msgstr ""

#~ msgid ""
#~ "Open `QGIS Python API <https://qgis.org/pyqgis>`_ documentation by typing "
#~ "``_pyqgis``."
#~ msgstr ""
